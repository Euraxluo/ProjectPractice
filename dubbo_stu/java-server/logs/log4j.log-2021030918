2021-03-09/18:10:07.939 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/18:10:07.943 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/18:10:07.945 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@1782113663 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1433867275 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/18:10:07.949  INFO: org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: startup date [Tue Mar 09 18:10:07 CST 2021]; root of context hierarchy
2021-03-09/18:10:07.972 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/18:10:07.972 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/18:10:07.972 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@245672235 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1012570586 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/18:10:07.977  INFO: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [META-INF/spring/dubbo.provider.xml]
2021-03-09/18:10:07.986 DEBUG: org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2021-03-09/18:10:08.005 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2021-03-09/18:10:08.008 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://dubbo.apache.org/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/compat/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.3.xsd}
2021-03-09/18:10:08.009 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2021-03-09/18:10:08.033 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/compat/dubbo.xsd
2021-03-09/18:10:08.048 DEBUG: org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92) - Loading bean definitions
2021-03-09/18:10:08.053 DEBUG: org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://dubbo.apache.org/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2021-03-09/18:10:08.056  INFO:  - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2021-03-09/18:10:08.072 DEBUG: org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 5 bean definitions from location pattern [META-INF/spring/dubbo.provider.xml]
2021-03-09/18:10:08.073 DEBUG: org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:617) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/18:10:08.086 DEBUG: org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:734) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6adede5]
2021-03-09/18:10:08.087 DEBUG: org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:758) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@10bdf5e5]
2021-03-09/18:10:08.088 DEBUG: org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/18:10:08.088 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'user-info-server'
2021-03-09/18:10:08.088 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'user-info-server'
2021-03-09/18:10:08.095 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'user-info-server' to allow for resolving potential circular references
2021-03-09/18:10:08.115 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'user-info-server'
2021-03-09/18:10:08.115 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'ikurento'
2021-03-09/18:10:08.115 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'ikurento'
2021-03-09/18:10:08.115 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'ikurento' to allow for resolving potential circular references
2021-03-09/18:10:08.118 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'ikurento'
2021-03-09/18:10:08.119 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'dubbo'
2021-03-09/18:10:08.119 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'dubbo'
2021-03-09/18:10:08.119 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2021-03-09/18:10:08.127 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'dubbo'
2021-03-09/18:10:08.127 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'aaa'
2021-03-09/18:10:08.127 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'aaa'
2021-03-09/18:10:08.145 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.148  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:63) -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.149  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:81) -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.218 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.227 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'aaa' to allow for resolving potential circular references
2021-03-09/18:10:08.241 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'demoService'
2021-03-09/18:10:08.241 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'demoService'
2021-03-09/18:10:08.245 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'demoService' to allow for resolving potential circular references
2021-03-09/18:10:08.245 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'demoService'
2021-03-09/18:10:08.245 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'ikurento'
2021-03-09/18:10:08.247 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1671) - Invoking afterPropertiesSet() on bean with name 'aaa'
2021-03-09/18:10:08.247 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'user-info-server'
2021-03-09/18:10:08.247 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'dubbo'
2021-03-09/18:10:08.248 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'aaa'
2021-03-09/18:10:08.248 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'demoService'
2021-03-09/18:10:08.248 DEBUG: org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:785) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@45018215]
2021-03-09/18:10:08.248 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/18:10:08.249 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'aaa'
2021-03-09/18:10:08.250  INFO: com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:129) -  [DUBBO] The service ready on spring started. service: com.ikurento.user.UserProvider, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.288 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.294 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.299 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.303  INFO: com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:539) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to local registry, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.304  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:491) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.304  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:501) -  [DUBBO] Register dubbo service com.ikurento.user.UserProvider url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&owner=AlexStocks&pid=20434&registry=zookeeper&timestamp=1615284608254, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.307 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.313 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.321 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Using SLF4J as the default logging framework
2021-03-09/18:10:08.322 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.eventLoopThreads: 32
2021-03-09/18:10:08.326 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Buffer.address: available
2021-03-09/18:10:08.327 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe.theUnsafe: available
2021-03-09/18:10:08.327 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - sun.misc.Unsafe.copyMemory: available
2021-03-09/18:10:08.327 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Bits.unaligned: true
2021-03-09/18:10:08.327 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - Java version: 8
2021-03-09/18:10:08.327 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noUnsafe: false
2021-03-09/18:10:08.328 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe: available
2021-03-09/18:10:08.328 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noJavassist: false
2021-03-09/18:10:08.330 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Javassist: available
2021-03-09/18:10:08.330 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
2021-03-09/18:10:08.330 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-03-09/18:10:08.330 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noPreferDirect: false
2021-03-09/18:10:08.337 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noKeySetOptimization: false
2021-03-09/18:10:08.337 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-03-09/18:10:08.354 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - -Dio.netty.initialSeedUniquifier: 0x16eacb8cec00fdad (took 4 ms)
2021-03-09/18:10:08.368 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.allocator.type: unpooled
2021-03-09/18:10:08.368 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.threadLocalDirectBufferSize: 65536
2021-03-09/18:10:08.368 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-03-09/18:10:08.370 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:86) - Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo)
2021-03-09/18:10:08.370 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:81) - /proc/sys/net/core/somaxconn: 4096
2021-03-09/18:10:08.374  INFO: com.alibaba.dubbo.qos.server.Server.start(Server.java:100) -  [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.379 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.386 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.392 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.406 DEBUG: com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:73) -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.422  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:65) -  [DUBBO] Start NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.424 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.431  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:200) -  [DUBBO] Load registry store file /home/yons/.dubbo/dubbo-registry-user-info-server-127.0.0.1:2181.cache, data: {com.ikurento.user.UserProvider=empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.468  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.start(CuratorFrameworkImpl.java:235) - Starting
2021-03-09/18:10:08.469 DEBUG: org.apache.curator.CuratorZookeeperClient.start(CuratorZookeeperClient.java:183) - Starting
2021-03-09/18:10:08.469 DEBUG: org.apache.curator.ConnectionState.start(ConnectionState.java:107) - Starting
2021-03-09/18:10:08.469 DEBUG: org.apache.curator.ConnectionState.reset(ConnectionState.java:255) - reset
2021-03-09/18:10:08.477  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:zookeeper.version=3.4.14-4c25d480e66aadd371de8bd2fd8da255ac140bcf, built on 03/06/2019 16:18 GMT
2021-03-09/18:10:08.477  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:host.name=dml
2021-03-09/18:10:08.477  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.version=1.8.0_282
2021-03-09/18:10:08.477  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.vendor=Private Build
2021-03-09/18:10:08.477  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2021-03-09/18:10:08.477  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar
2021-03-09/18:10:08.477  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2021-03-09/18:10:08.477  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.io.tmpdir=/tmp
2021-03-09/18:10:08.477  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.compiler=<NA>
2021-03-09/18:10:08.478  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.name=Linux
2021-03-09/18:10:08.478  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.arch=amd64
2021-03-09/18:10:08.478  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.version=5.4.0-66-generic
2021-03-09/18:10:08.478  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.name=yons
2021-03-09/18:10:08.478  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.home=/home/yons
2021-03-09/18:10:08.478  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.dir=/home/yons/go/src/java-server
2021-03-09/18:10:08.479  INFO: org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:442) - Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@7dc19a70
2021-03-09/18:10:08.480 DEBUG: org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:118) - zookeeper.disableAutoWatchReset is false
2021-03-09/18:10:08.485 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/18:10:08.486  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/18:10:08.487  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:273) -  [DUBBO] Register: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.492  INFO: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:879) - Socket connection established to localhost/127.0.0.1:2181, initiating session
2021-03-09/18:10:08.493 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:952) - Session establishment request sent on localhost/127.0.0.1:2181
2021-03-09/18:10:08.496  INFO: org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1299) - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1000a5589cb0013, negotiated timeout = 40000
2021-03-09/18:10:08.498  INFO: org.apache.curator.framework.state.ConnectionStateManager.postState(ConnectionStateManager.java:228) - State change: CONNECTED
2021-03-09/18:10:08.503 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0013, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,858,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers,F  response:: s{148,148,1615276212259,1615276212259,0,6,0,0,10,0,521} 
2021-03-09/18:10:08.510 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0013, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,859,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D20434%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615284608257,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D20434%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615284608257 
2021-03-09/18:10:08.510  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:298) -  [DUBBO] Subscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.512 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0013, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,859,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,F  response:: s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/18:10:08.515 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0013, packet:: clientPath:null serverPath:null finished:false header:: 4,12  replyHeader:: 4,859,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,T  response:: v{},s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/18:10:08.515  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:387) -  [DUBBO] Notify urls for subscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257, urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.516 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:367) -  [DUBBO] original override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.516 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:369) -  [DUBBO] subscribe url: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257, override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.519 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.522 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:08.527 DEBUG: org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:92) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2021-03-09/18:10:08.527 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/18:10:14.391 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:14.411 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:14.421  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:14.423  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:43418,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:10:21.863 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 2ms
2021-03-09/18:10:35.210 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:10:48.557 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:11:01.903 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:11:15.249 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:11:28.592 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:11:41.932 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:11:55.279 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:12:08.624 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:12:21.966 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:12:35.310 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:12:48.651 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:13:01.997 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:13:15.336 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:13:28.684 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:13:42.032 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:13:55.378 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:14:08.720 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:14:22.069 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 2ms
2021-03-09/18:14:35.412 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:14:48.757 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:15:02.100 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:15:15.447 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:15:28.793 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:15:42.141 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:15:55.487 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:16:08.822 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:16:22.169 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:16:35.505 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:16:48.849 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:17:02.189 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:17:15.534 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:17:28.876 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:17:42.220 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:17:55.565 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:18:08.912 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:18:22.257 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:18:35.599 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:18:48.944 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:19:02.292 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:19:15.640 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:19:28.985 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:19:42.332 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:19:55.679 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:20:09.026 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:20:22.373 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:20:35.717 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:20:49.062 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:21:02.404 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:21:15.749 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:21:29.091 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:21:42.432 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:21:55.779 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:22:09.118 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:22:22.464 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:22:35.808 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:22:49.152 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:23:02.499 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 2ms
2021-03-09/18:23:15.841 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:23:29.184 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 4ms
2021-03-09/18:23:42.520 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:23:55.867 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:24:09.213 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:24:22.562 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 2ms
2021-03-09/18:24:35.907 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:24:49.249 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:25:02.596 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:25:15.936 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:25:29.280 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:25:42.628 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:25:55.971 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:26:09.319 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:26:22.665 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:26:36.007 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:26:49.352 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:27:02.699 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:27:16.046 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 2ms
2021-03-09/18:27:29.388 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:27:42.735 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:27:56.082 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:28:09.426 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 2ms
2021-03-09/18:28:22.769 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:28:28.998 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:28:29.008 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:28:29.017  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:28:29.017  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:44616,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:28:35.558 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:28:35.568 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:28:35.579  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:28:35.579  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:44630,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:28:36.116 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:28:49.464 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:29:02.809 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:29:16.157 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:29:29.498 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:29:42.844 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:29:56.184 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:30:09.531 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:30:22.876 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:30:36.222 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:30:49.565 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:31:02.911 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:31:16.246 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:31:29.592 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:31:42.939 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:31:56.286 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:32:09.633 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:32:22.973 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:32:36.319 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:32:49.664 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:33:03.012 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:33:16.358 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:33:29.702 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:33:43.049 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:33:56.396 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:34:09.740 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:34:23.084 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:34:36.429 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:34:49.773 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:35:03.119 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:35:16.464 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:35:29.809 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:35:43.156 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:35:56.503 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 2ms
2021-03-09/18:36:09.850 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 2ms
2021-03-09/18:36:23.196 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:36:36.540 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:36:49.886 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:37:03.228 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:37:16.575 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:37:29.922 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:37:43.270 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:37:56.612 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:38:09.953 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:38:23.301 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:38:36.647 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:38:49.995 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:39:03.331 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:39:16.673 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 2ms
2021-03-09/18:39:30.021 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:39:43.359 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:39:56.707 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 2ms
2021-03-09/18:40:10.049 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:40:23.396 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:40:36.733 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:40:50.080 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:41:03.424 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:41:16.770 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:41:30.117 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:41:43.463 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:41:56.810 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 2ms
2021-03-09/18:42:10.156 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:42:23.500 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:42:36.844 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:42:50.192 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:43:03.536 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:43:16.884 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:43:30.229 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:43:43.572 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:43:56.920 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:44:10.266 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 2ms
2021-03-09/18:44:23.613 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 3ms
2021-03-09/18:44:36.958 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:44:50.291 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:45:03.638 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:45:16.985 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 2ms
2021-03-09/18:45:30.325 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:45:43.667 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:45:57.013 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:46:10.360 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:46:23.707 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:46:37.053 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:46:50.399 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:47:03.737 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:47:17.080 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:47:30.427 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:47:43.774 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:47:57.122 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 2ms
2021-03-09/18:48:10.479 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:48:23.816 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:48:37.163 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:48:50.509 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:49:03.854 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:49:17.201 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:49:30.548 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 1ms
2021-03-09/18:49:43.891 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:49:57.239 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0013 after 0ms
2021-03-09/18:49:58.259  INFO: com.alibaba.dubbo.config.DubboShutdownHook.run(DubboShutdownHook.java:56) -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:49:58.260  INFO: com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64) -  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=20434&timestamp=1615284608254], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:49:58.260  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:451) -  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=20434&timestamp=1615284608254, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:49:58.260  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(AbstractRegistry.java:284) -  [DUBBO] Unregister: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:49:58.269 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0013, packet:: clientPath:null serverPath:null finished:false header:: 5,2  replyHeader:: 5,976,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D20434%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615284608257,-1  response:: null
2021-03-09/18:49:58.270  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:460) -  [DUBBO] Destroy unregister url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:49:58.270  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(AbstractRegistry.java:317) -  [DUBBO] Unsubscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:49:58.270  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:476) -  [DUBBO] Destroy unsubscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:49:58.270 DEBUG: org.apache.curator.framework.imps.CuratorFrameworkImpl.close(CuratorFrameworkImpl.java:282) - Closing
2021-03-09/18:49:58.271  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop(CuratorFrameworkImpl.java:821) - backgroundOperationsLoop exiting
2021-03-09/18:49:58.271 DEBUG: org.apache.curator.CuratorZookeeperClient.close(CuratorZookeeperClient.java:199) - Closing
2021-03-09/18:49:58.271 DEBUG: org.apache.curator.ConnectionState.close(ConnectionState.java:115) - Closing
2021-03-09/18:49:58.273 DEBUG: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:682) - Closing session: 0x1000a5589cb0013
2021-03-09/18:49:58.273 DEBUG: org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370) - Closing client for session: 0x1000a5589cb0013
2021-03-09/18:49:58.275 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0013, packet:: clientPath:null serverPath:null finished:false header:: 6,-11  replyHeader:: 6,977,0  request:: null response:: null
2021-03-09/18:49:58.275 DEBUG: org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354) - Disconnecting client for session: 0x1000a5589cb0013
2021-03-09/18:49:58.275  INFO: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:693) - Session: 0x1000a5589cb0013 closed
2021-03-09/18:49:58.275  INFO: org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:522) - EventThread shut down for session: 0x1000a5589cb0013
2021-03-09/18:49:58.276  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:432) -  [DUBBO] Close dubbo server: /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:49:58.277  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.close(AbstractServer.java:145) -  [DUBBO] Close NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:49:58.278  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:49:58.278  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: injvm://127.0.0.1/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:41.660 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/18:52:41.662 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/18:52:41.665 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@1782113663 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1433867275 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/18:52:41.667  INFO: org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: startup date [Tue Mar 09 18:52:41 CST 2021]; root of context hierarchy
2021-03-09/18:52:41.693 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/18:52:41.693 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/18:52:41.693 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@245672235 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1012570586 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/18:52:41.698  INFO: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [META-INF/spring/dubbo.provider.xml]
2021-03-09/18:52:41.710 DEBUG: org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2021-03-09/18:52:41.732 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2021-03-09/18:52:41.735 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://dubbo.apache.org/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/compat/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.3.xsd}
2021-03-09/18:52:41.735 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2021-03-09/18:52:41.757 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/compat/dubbo.xsd
2021-03-09/18:52:41.770 DEBUG: org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92) - Loading bean definitions
2021-03-09/18:52:41.776 DEBUG: org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://dubbo.apache.org/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2021-03-09/18:52:41.780  INFO:  - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2021-03-09/18:52:41.798 DEBUG: org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 5 bean definitions from location pattern [META-INF/spring/dubbo.provider.xml]
2021-03-09/18:52:41.799 DEBUG: org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:617) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/18:52:41.813 DEBUG: org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:734) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6adede5]
2021-03-09/18:52:41.814 DEBUG: org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:758) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@10bdf5e5]
2021-03-09/18:52:41.815 DEBUG: org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/18:52:41.815 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'user-info-server'
2021-03-09/18:52:41.815 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'user-info-server'
2021-03-09/18:52:41.822 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'user-info-server' to allow for resolving potential circular references
2021-03-09/18:52:41.841 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'user-info-server'
2021-03-09/18:52:41.841 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'ikurento'
2021-03-09/18:52:41.841 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'ikurento'
2021-03-09/18:52:41.842 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'ikurento' to allow for resolving potential circular references
2021-03-09/18:52:41.845 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'ikurento'
2021-03-09/18:52:41.845 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'dubbo'
2021-03-09/18:52:41.845 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'dubbo'
2021-03-09/18:52:41.845 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2021-03-09/18:52:41.852 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'dubbo'
2021-03-09/18:52:41.852 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'aaa'
2021-03-09/18:52:41.853 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'aaa'
2021-03-09/18:52:41.873 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:41.876  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:63) -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:41.876  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:81) -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:41.950 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:41.959 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'aaa' to allow for resolving potential circular references
2021-03-09/18:52:41.974 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'demoService'
2021-03-09/18:52:41.974 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'demoService'
2021-03-09/18:52:41.978 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'demoService' to allow for resolving potential circular references
2021-03-09/18:52:41.978 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'demoService'
2021-03-09/18:52:41.979 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'ikurento'
2021-03-09/18:52:41.980 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1671) - Invoking afterPropertiesSet() on bean with name 'aaa'
2021-03-09/18:52:41.980 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'user-info-server'
2021-03-09/18:52:41.980 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'dubbo'
2021-03-09/18:52:41.981 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'aaa'
2021-03-09/18:52:41.981 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'demoService'
2021-03-09/18:52:41.981 DEBUG: org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:785) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@45018215]
2021-03-09/18:52:41.981 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/18:52:41.982 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'aaa'
2021-03-09/18:52:41.983  INFO: com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:129) -  [DUBBO] The service ready on spring started. service: com.ikurento.user.UserProvider, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.021 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.027 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.032 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.037  INFO: com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:539) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to local registry, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.037  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:491) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.037  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:501) -  [DUBBO] Register dubbo service com.ikurento.user.UserProvider url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&owner=AlexStocks&pid=27784&registry=zookeeper&timestamp=1615287161986, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.041 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.048 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.059 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Using SLF4J as the default logging framework
2021-03-09/18:52:42.060 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.eventLoopThreads: 32
2021-03-09/18:52:42.065 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Buffer.address: available
2021-03-09/18:52:42.065 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe.theUnsafe: available
2021-03-09/18:52:42.066 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - sun.misc.Unsafe.copyMemory: available
2021-03-09/18:52:42.066 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Bits.unaligned: true
2021-03-09/18:52:42.066 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - Java version: 8
2021-03-09/18:52:42.066 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noUnsafe: false
2021-03-09/18:52:42.066 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe: available
2021-03-09/18:52:42.067 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noJavassist: false
2021-03-09/18:52:42.068 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Javassist: available
2021-03-09/18:52:42.069 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
2021-03-09/18:52:42.069 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-03-09/18:52:42.069 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noPreferDirect: false
2021-03-09/18:52:42.078 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noKeySetOptimization: false
2021-03-09/18:52:42.078 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-03-09/18:52:42.097 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - -Dio.netty.initialSeedUniquifier: 0x920417ecff6ddd68 (took 4 ms)
2021-03-09/18:52:42.113 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.allocator.type: unpooled
2021-03-09/18:52:42.113 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.threadLocalDirectBufferSize: 65536
2021-03-09/18:52:42.114 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-03-09/18:52:42.115 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:86) - Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo)
2021-03-09/18:52:42.115 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:81) - /proc/sys/net/core/somaxconn: 4096
2021-03-09/18:52:42.119  INFO: com.alibaba.dubbo.qos.server.Server.start(Server.java:100) -  [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.125 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.132 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.138 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.161 DEBUG: com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:73) -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.180  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:65) -  [DUBBO] Start NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.183 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.190  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:200) -  [DUBBO] Load registry store file /home/yons/.dubbo/dubbo-registry-user-info-server-127.0.0.1:2181.cache, data: {com.ikurento.user.UserProvider=empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=20434&side=provider&timeout=3000&timestamp=1615284608257}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.231  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.start(CuratorFrameworkImpl.java:235) - Starting
2021-03-09/18:52:42.231 DEBUG: org.apache.curator.CuratorZookeeperClient.start(CuratorZookeeperClient.java:183) - Starting
2021-03-09/18:52:42.232 DEBUG: org.apache.curator.ConnectionState.start(ConnectionState.java:107) - Starting
2021-03-09/18:52:42.232 DEBUG: org.apache.curator.ConnectionState.reset(ConnectionState.java:255) - reset
2021-03-09/18:52:42.275  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:zookeeper.version=3.4.14-4c25d480e66aadd371de8bd2fd8da255ac140bcf, built on 03/06/2019 16:18 GMT
2021-03-09/18:52:42.276  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:host.name=dml
2021-03-09/18:52:42.276  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.version=1.8.0_282
2021-03-09/18:52:42.276  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.vendor=Private Build
2021-03-09/18:52:42.276  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2021-03-09/18:52:42.276  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar
2021-03-09/18:52:42.276  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2021-03-09/18:52:42.276  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.io.tmpdir=/tmp
2021-03-09/18:52:42.276  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.compiler=<NA>
2021-03-09/18:52:42.277  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.name=Linux
2021-03-09/18:52:42.277  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.arch=amd64
2021-03-09/18:52:42.277  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.version=5.4.0-66-generic
2021-03-09/18:52:42.277  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.name=yons
2021-03-09/18:52:42.277  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.home=/home/yons
2021-03-09/18:52:42.277  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.dir=/home/yons/go/src/java-server
2021-03-09/18:52:42.278  INFO: org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:442) - Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@1e4f4a5c
2021-03-09/18:52:42.279 DEBUG: org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:118) - zookeeper.disableAutoWatchReset is false
2021-03-09/18:52:42.286 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/18:52:42.288  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/18:52:42.288  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:273) -  [DUBBO] Register: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.294  INFO: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:879) - Socket connection established to localhost/127.0.0.1:2181, initiating session
2021-03-09/18:52:42.296 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:952) - Session establishment request sent on localhost/127.0.0.1:2181
2021-03-09/18:52:42.302  INFO: org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1299) - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1000a5589cb0022, negotiated timeout = 40000
2021-03-09/18:52:42.304  INFO: org.apache.curator.framework.state.ConnectionStateManager.postState(ConnectionStateManager.java:228) - State change: CONNECTED
2021-03-09/18:52:42.310 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0022, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,978,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers,F  response:: s{148,148,1615276212259,1615276212259,0,8,0,0,10,0,976} 
2021-03-09/18:52:42.317 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0022, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,979,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D27784%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615287161989,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D27784%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615287161989 
2021-03-09/18:52:42.318  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:298) -  [DUBBO] Subscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.319 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0022, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,979,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,F  response:: s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/18:52:42.322 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0022, packet:: clientPath:null serverPath:null finished:false header:: 4,12  replyHeader:: 4,979,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,T  response:: v{},s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/18:52:42.323  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:387) -  [DUBBO] Notify urls for subscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989, urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.324 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:367) -  [DUBBO] original override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.324 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:369) -  [DUBBO] subscribe url: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989, override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.328 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.333 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:52:42.339 DEBUG: org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:92) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2021-03-09/18:52:42.340 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/18:52:55.671 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0022 after 2ms
2021-03-09/18:53:09.017 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0022 after 1ms
2021-03-09/18:53:22.362 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0022 after 0ms
2021-03-09/18:53:35.701 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0022 after 2ms
2021-03-09/18:53:49.047 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0022 after 0ms
2021-03-09/18:54:02.394 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0022 after 1ms
2021-03-09/18:54:15.737 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0022 after 0ms
2021-03-09/18:54:29.082 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0022 after 1ms
2021-03-09/18:54:42.428 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0022 after 1ms
2021-03-09/18:54:55.774 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0022 after 1ms
2021-03-09/18:55:09.118 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0022 after 1ms
2021-03-09/18:55:22.457 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0022 after 1ms
2021-03-09/18:55:35.804 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0022 after 0ms
2021-03-09/18:55:49.148 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0022 after 0ms
2021-03-09/18:55:57.734  INFO: com.alibaba.dubbo.config.DubboShutdownHook.run(DubboShutdownHook.java:56) -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:55:57.734  INFO: com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64) -  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=27784&timestamp=1615287161986], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:55:57.734  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:451) -  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=27784&timestamp=1615287161986, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:55:57.734  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(AbstractRegistry.java:284) -  [DUBBO] Unregister: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:55:57.743 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0022, packet:: clientPath:null serverPath:null finished:false header:: 5,2  replyHeader:: 5,1004,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D27784%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615287161989,-1  response:: null
2021-03-09/18:55:57.743  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:460) -  [DUBBO] Destroy unregister url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:55:57.743  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(AbstractRegistry.java:317) -  [DUBBO] Unsubscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:55:57.743  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:476) -  [DUBBO] Destroy unsubscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:55:57.744 DEBUG: org.apache.curator.framework.imps.CuratorFrameworkImpl.close(CuratorFrameworkImpl.java:282) - Closing
2021-03-09/18:55:57.744  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop(CuratorFrameworkImpl.java:821) - backgroundOperationsLoop exiting
2021-03-09/18:55:57.745 DEBUG: org.apache.curator.CuratorZookeeperClient.close(CuratorZookeeperClient.java:199) - Closing
2021-03-09/18:55:57.745 DEBUG: org.apache.curator.ConnectionState.close(ConnectionState.java:115) - Closing
2021-03-09/18:55:57.746 DEBUG: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:682) - Closing session: 0x1000a5589cb0022
2021-03-09/18:55:57.746 DEBUG: org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370) - Closing client for session: 0x1000a5589cb0022
2021-03-09/18:55:57.750 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0022, packet:: clientPath:null serverPath:null finished:false header:: 6,-11  replyHeader:: 6,1005,0  request:: null response:: null
2021-03-09/18:55:57.750 DEBUG: org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354) - Disconnecting client for session: 0x1000a5589cb0022
2021-03-09/18:55:57.750  INFO: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:693) - Session: 0x1000a5589cb0022 closed
2021-03-09/18:55:57.750 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1146) - An exception was thrown while closing send thread for session 0x1000a5589cb0022 : Unable to read additional data from server sessionid 0x1000a5589cb0022, likely server has closed socket
2021-03-09/18:55:57.751  INFO: org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:522) - EventThread shut down for session: 0x1000a5589cb0022
2021-03-09/18:55:57.751  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:432) -  [DUBBO] Close dubbo server: /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:55:57.752  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.close(AbstractServer.java:145) -  [DUBBO] Close NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:55:57.752  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:55:57.753  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: injvm://127.0.0.1/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:55:59.834 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/18:55:59.836 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/18:55:59.838 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@1782113663 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1433867275 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/18:55:59.841  INFO: org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: startup date [Tue Mar 09 18:55:59 CST 2021]; root of context hierarchy
2021-03-09/18:55:59.863 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/18:55:59.864 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/18:55:59.864 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@245672235 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1012570586 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/18:55:59.869  INFO: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [META-INF/spring/dubbo.provider.xml]
2021-03-09/18:55:59.878 DEBUG: org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2021-03-09/18:55:59.895 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2021-03-09/18:55:59.898 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://dubbo.apache.org/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/compat/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.3.xsd}
2021-03-09/18:55:59.899 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2021-03-09/18:55:59.920 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/compat/dubbo.xsd
2021-03-09/18:55:59.934 DEBUG: org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92) - Loading bean definitions
2021-03-09/18:55:59.940 DEBUG: org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://dubbo.apache.org/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2021-03-09/18:55:59.942  INFO:  - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2021-03-09/18:55:59.958 DEBUG: org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 5 bean definitions from location pattern [META-INF/spring/dubbo.provider.xml]
2021-03-09/18:55:59.959 DEBUG: org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:617) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/18:55:59.971 DEBUG: org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:734) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6adede5]
2021-03-09/18:55:59.972 DEBUG: org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:758) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@10bdf5e5]
2021-03-09/18:55:59.973 DEBUG: org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/18:55:59.973 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'user-info-server'
2021-03-09/18:55:59.973 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'user-info-server'
2021-03-09/18:55:59.980 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'user-info-server' to allow for resolving potential circular references
2021-03-09/18:55:59.999 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'user-info-server'
2021-03-09/18:55:59.999 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'ikurento'
2021-03-09/18:55:59.999 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'ikurento'
2021-03-09/18:56:00.000 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'ikurento' to allow for resolving potential circular references
2021-03-09/18:56:00.003 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'ikurento'
2021-03-09/18:56:00.003 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'dubbo'
2021-03-09/18:56:00.003 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'dubbo'
2021-03-09/18:56:00.003 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2021-03-09/18:56:00.011 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'dubbo'
2021-03-09/18:56:00.011 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'aaa'
2021-03-09/18:56:00.012 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'aaa'
2021-03-09/18:56:00.030 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.033  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:63) -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.033  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:81) -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.102 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.112 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'aaa' to allow for resolving potential circular references
2021-03-09/18:56:00.127 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'demoService'
2021-03-09/18:56:00.127 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'demoService'
2021-03-09/18:56:00.131 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'demoService' to allow for resolving potential circular references
2021-03-09/18:56:00.131 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'demoService'
2021-03-09/18:56:00.131 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'ikurento'
2021-03-09/18:56:00.132 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1671) - Invoking afterPropertiesSet() on bean with name 'aaa'
2021-03-09/18:56:00.133 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'user-info-server'
2021-03-09/18:56:00.133 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'dubbo'
2021-03-09/18:56:00.133 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'aaa'
2021-03-09/18:56:00.133 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'demoService'
2021-03-09/18:56:00.134 DEBUG: org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:785) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@45018215]
2021-03-09/18:56:00.134 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/18:56:00.135 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'aaa'
2021-03-09/18:56:00.135  INFO: com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:129) -  [DUBBO] The service ready on spring started. service: com.ikurento.user.UserProvider, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.174 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.179 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.184 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.188  INFO: com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:539) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to local registry, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.188  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:491) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.188  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:501) -  [DUBBO] Register dubbo service com.ikurento.user.UserProvider url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&owner=AlexStocks&pid=28088&registry=zookeeper&timestamp=1615287360139, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.191 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.197 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.204 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Using SLF4J as the default logging framework
2021-03-09/18:56:00.206 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.eventLoopThreads: 32
2021-03-09/18:56:00.210 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Buffer.address: available
2021-03-09/18:56:00.210 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe.theUnsafe: available
2021-03-09/18:56:00.211 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - sun.misc.Unsafe.copyMemory: available
2021-03-09/18:56:00.211 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Bits.unaligned: true
2021-03-09/18:56:00.211 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - Java version: 8
2021-03-09/18:56:00.211 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noUnsafe: false
2021-03-09/18:56:00.211 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe: available
2021-03-09/18:56:00.211 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noJavassist: false
2021-03-09/18:56:00.213 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Javassist: available
2021-03-09/18:56:00.213 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
2021-03-09/18:56:00.214 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-03-09/18:56:00.214 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noPreferDirect: false
2021-03-09/18:56:00.221 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noKeySetOptimization: false
2021-03-09/18:56:00.221 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-03-09/18:56:00.239 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - -Dio.netty.initialSeedUniquifier: 0x7fa7e36a5d558118 (took 4 ms)
2021-03-09/18:56:00.252 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.allocator.type: unpooled
2021-03-09/18:56:00.253 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.threadLocalDirectBufferSize: 65536
2021-03-09/18:56:00.253 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-03-09/18:56:00.254 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:86) - Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo)
2021-03-09/18:56:00.254 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:81) - /proc/sys/net/core/somaxconn: 4096
2021-03-09/18:56:00.257  INFO: com.alibaba.dubbo.qos.server.Server.start(Server.java:100) -  [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.262 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.269 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.275 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.290 DEBUG: com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:73) -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.305  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:65) -  [DUBBO] Start NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.307 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.315  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:200) -  [DUBBO] Load registry store file /home/yons/.dubbo/dubbo-registry-user-info-server-127.0.0.1:2181.cache, data: {com.ikurento.user.UserProvider=empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=27784&side=provider&timeout=3000&timestamp=1615287161989}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.352  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.start(CuratorFrameworkImpl.java:235) - Starting
2021-03-09/18:56:00.352 DEBUG: org.apache.curator.CuratorZookeeperClient.start(CuratorZookeeperClient.java:183) - Starting
2021-03-09/18:56:00.353 DEBUG: org.apache.curator.ConnectionState.start(ConnectionState.java:107) - Starting
2021-03-09/18:56:00.353 DEBUG: org.apache.curator.ConnectionState.reset(ConnectionState.java:255) - reset
2021-03-09/18:56:00.361  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:zookeeper.version=3.4.14-4c25d480e66aadd371de8bd2fd8da255ac140bcf, built on 03/06/2019 16:18 GMT
2021-03-09/18:56:00.361  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:host.name=dml
2021-03-09/18:56:00.361  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.version=1.8.0_282
2021-03-09/18:56:00.361  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.vendor=Private Build
2021-03-09/18:56:00.361  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2021-03-09/18:56:00.361  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar
2021-03-09/18:56:00.361  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2021-03-09/18:56:00.361  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.io.tmpdir=/tmp
2021-03-09/18:56:00.361  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.compiler=<NA>
2021-03-09/18:56:00.362  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.name=Linux
2021-03-09/18:56:00.362  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.arch=amd64
2021-03-09/18:56:00.362  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.version=5.4.0-66-generic
2021-03-09/18:56:00.362  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.name=yons
2021-03-09/18:56:00.362  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.home=/home/yons
2021-03-09/18:56:00.362  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.dir=/home/yons/go/src/java-server
2021-03-09/18:56:00.363  INFO: org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:442) - Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@7dc19a70
2021-03-09/18:56:00.364 DEBUG: org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:118) - zookeeper.disableAutoWatchReset is false
2021-03-09/18:56:00.369 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/18:56:00.370  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/18:56:00.371  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:273) -  [DUBBO] Register: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.377  INFO: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:879) - Socket connection established to localhost/127.0.0.1:2181, initiating session
2021-03-09/18:56:00.378 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:952) - Session establishment request sent on localhost/127.0.0.1:2181
2021-03-09/18:56:00.382  INFO: org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1299) - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1000a5589cb0025, negotiated timeout = 40000
2021-03-09/18:56:00.384  INFO: org.apache.curator.framework.state.ConnectionStateManager.postState(ConnectionStateManager.java:228) - State change: CONNECTED
2021-03-09/18:56:00.390 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0025, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,1006,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers,F  response:: s{148,148,1615276212259,1615276212259,0,10,0,0,10,0,1004} 
2021-03-09/18:56:00.400 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0025, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,1007,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D28088%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615287360141,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D28088%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615287360141 
2021-03-09/18:56:00.401  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:298) -  [DUBBO] Subscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.403 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0025, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,1007,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,F  response:: s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/18:56:00.406 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0025, packet:: clientPath:null serverPath:null finished:false header:: 4,12  replyHeader:: 4,1007,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,T  response:: v{},s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/18:56:00.407  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:387) -  [DUBBO] Notify urls for subscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.408 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:367) -  [DUBBO] original override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.408 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:369) -  [DUBBO] subscribe url: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.412 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.415 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:56:00.420 DEBUG: org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:92) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2021-03-09/18:56:00.421 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/18:56:13.755 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/18:56:27.103 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/18:56:40.445 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/18:56:53.789 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/18:57:07.133 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/18:57:20.476 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/18:57:33.821 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/18:57:47.165 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/18:58:00.509 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/18:58:13.857 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/18:58:23.065 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:58:23.073  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47040,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:58:24.073  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:58:24.073  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47044,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:58:25.991 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:58:25.992  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:58:25.992  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47046,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:58:27.203 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/18:58:28.989  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:58:28.990  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47048,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:58:40.551 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/18:58:53.897 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/18:59:07.244 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/18:59:09.649  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:59:09.649  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47092,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:59:20.590 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/18:59:33.932 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/18:59:37.795 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:59:37.796  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47120,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:59:40.766 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:59:40.768  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47136,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:59:41.768  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47138,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:59:42.764 DEBUG: com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(HeartbeatHandler.java:74) -  [DUBBO] Received heartbeat from remote channel /172.18.0.1:47132, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:59:43.767  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:59:43.768  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47132,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/18:59:47.277 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
