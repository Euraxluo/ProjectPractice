2021-03-09/16:00:23.263 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/16:00:23.266 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/16:00:23.268 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@1782113663 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1433867275 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/16:00:23.271  INFO: org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: startup date [Tue Mar 09 16:00:23 CST 2021]; root of context hierarchy
2021-03-09/16:00:23.295 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/16:00:23.295 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/16:00:23.295 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@245672235 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1012570586 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/16:00:23.302  INFO: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [META-INF/spring/dubbo.provider.xml]
2021-03-09/16:00:23.313 DEBUG: org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2021-03-09/16:00:23.335 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2021-03-09/16:00:23.338 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://dubbo.apache.org/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/compat/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.3.xsd}
2021-03-09/16:00:23.339 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2021-03-09/16:00:23.361 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/compat/dubbo.xsd
2021-03-09/16:00:23.375 DEBUG: org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92) - Loading bean definitions
2021-03-09/16:00:23.381 DEBUG: org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://dubbo.apache.org/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2021-03-09/16:00:23.383  INFO:  - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2021-03-09/16:00:23.399 DEBUG: org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 5 bean definitions from location pattern [META-INF/spring/dubbo.provider.xml]
2021-03-09/16:00:23.400 DEBUG: org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:617) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/16:00:23.413 DEBUG: org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:734) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6adede5]
2021-03-09/16:00:23.414 DEBUG: org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:758) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@10bdf5e5]
2021-03-09/16:00:23.414 DEBUG: org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/16:00:23.415 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'user-info-server'
2021-03-09/16:00:23.415 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'user-info-server'
2021-03-09/16:00:23.426 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'user-info-server' to allow for resolving potential circular references
2021-03-09/16:00:23.467 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'user-info-server'
2021-03-09/16:00:23.467 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'ikurento'
2021-03-09/16:00:23.468 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'ikurento'
2021-03-09/16:00:23.468 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'ikurento' to allow for resolving potential circular references
2021-03-09/16:00:23.473 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'ikurento'
2021-03-09/16:00:23.474 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'dubbo'
2021-03-09/16:00:23.474 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'dubbo'
2021-03-09/16:00:23.475 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2021-03-09/16:00:23.491 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'dubbo'
2021-03-09/16:00:23.491 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'aaa'
2021-03-09/16:00:23.491 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'aaa'
2021-03-09/16:00:23.521 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.525  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:63) -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.526  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:81) -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.623 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.634 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'aaa' to allow for resolving potential circular references
2021-03-09/16:00:23.649 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'demoService'
2021-03-09/16:00:23.649 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'demoService'
2021-03-09/16:00:23.653 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'demoService' to allow for resolving potential circular references
2021-03-09/16:00:23.653 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'demoService'
2021-03-09/16:00:23.654 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'ikurento'
2021-03-09/16:00:23.655 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1671) - Invoking afterPropertiesSet() on bean with name 'aaa'
2021-03-09/16:00:23.655 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'user-info-server'
2021-03-09/16:00:23.656 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'dubbo'
2021-03-09/16:00:23.656 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'aaa'
2021-03-09/16:00:23.656 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'demoService'
2021-03-09/16:00:23.657 DEBUG: org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:785) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@45018215]
2021-03-09/16:00:23.657 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/16:00:23.658 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'aaa'
2021-03-09/16:00:23.658  INFO: com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:129) -  [DUBBO] The service ready on spring started. service: com.ikurento.user.UserProvider, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.702 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.709 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.716 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.721  INFO: com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:539) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to local registry, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.722  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:491) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.722  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:501) -  [DUBBO] Register dubbo service com.ikurento.user.UserProvider url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&owner=AlexStocks&pid=17823&registry=zookeeper&timestamp=1615276823663, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.726 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.733 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.742 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Using SLF4J as the default logging framework
2021-03-09/16:00:23.744 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.eventLoopThreads: 32
2021-03-09/16:00:23.750 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Buffer.address: available
2021-03-09/16:00:23.751 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe.theUnsafe: available
2021-03-09/16:00:23.751 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - sun.misc.Unsafe.copyMemory: available
2021-03-09/16:00:23.751 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Bits.unaligned: true
2021-03-09/16:00:23.752 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - Java version: 8
2021-03-09/16:00:23.752 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noUnsafe: false
2021-03-09/16:00:23.752 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe: available
2021-03-09/16:00:23.752 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noJavassist: false
2021-03-09/16:00:23.754 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Javassist: available
2021-03-09/16:00:23.755 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
2021-03-09/16:00:23.755 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-03-09/16:00:23.755 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noPreferDirect: false
2021-03-09/16:00:23.763 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noKeySetOptimization: false
2021-03-09/16:00:23.763 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-03-09/16:00:23.782 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - -Dio.netty.initialSeedUniquifier: 0x34a7d4f7e717b0c0 (took 5 ms)
2021-03-09/16:00:23.797 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.allocator.type: unpooled
2021-03-09/16:00:23.797 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.threadLocalDirectBufferSize: 65536
2021-03-09/16:00:23.797 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-03-09/16:00:23.798 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:86) - Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo)
2021-03-09/16:00:23.799 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:81) - /proc/sys/net/core/somaxconn: 4096
2021-03-09/16:00:23.802 ERROR: com.alibaba.dubbo.qos.server.Server.start(Server.java:102) -  [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.5, current host: 172.18.0.1
java.net.BindException: 地址已在使用
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:461)
	at sun.nio.ch.Net.bind(Net.java:453)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:222)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:85)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:125)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:498)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1271)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:413)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:399)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:198)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:349)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:358)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:357)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)
	at java.lang.Thread.run(Thread.java:748)
2021-03-09/16:00:23.803  WARN: com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.startQosServer(QosProtocolWrapper.java:101) -  [DUBBO] Fail to start qos server: , dubbo version: 2.6.5, current host: 172.18.0.1
java.net.BindException: 地址已在使用
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:461)
	at sun.nio.ch.Net.bind(Net.java:453)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:222)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:85)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:125)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:498)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1271)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:413)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:399)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:198)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:349)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:358)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:357)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)
	at java.lang.Thread.run(Thread.java:748)
2021-03-09/16:00:23.810 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.823 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.836 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.872 DEBUG: com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:73) -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.899  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:65) -  [DUBBO] Start NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.903 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.913  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:200) -  [DUBBO] Load registry store file /home/yons/.dubbo/dubbo-registry-user-info-server-127.0.0.1:2181.cache, data: {com.ikurento.user.UserProvider=empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=13515&side=provider&timeout=3000&timestamp=1615276211971}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:23.976  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.start(CuratorFrameworkImpl.java:235) - Starting
2021-03-09/16:00:23.978 DEBUG: org.apache.curator.CuratorZookeeperClient.start(CuratorZookeeperClient.java:183) - Starting
2021-03-09/16:00:23.978 DEBUG: org.apache.curator.ConnectionState.start(ConnectionState.java:107) - Starting
2021-03-09/16:00:23.978 DEBUG: org.apache.curator.ConnectionState.reset(ConnectionState.java:255) - reset
2021-03-09/16:00:23.992  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:zookeeper.version=3.4.14-4c25d480e66aadd371de8bd2fd8da255ac140bcf, built on 03/06/2019 16:18 GMT
2021-03-09/16:00:23.993  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:host.name=dml
2021-03-09/16:00:23.993  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.version=1.8.0_282
2021-03-09/16:00:23.993  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.vendor=Private Build
2021-03-09/16:00:23.993  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2021-03-09/16:00:23.993  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar
2021-03-09/16:00:23.994  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2021-03-09/16:00:23.994  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.io.tmpdir=/tmp
2021-03-09/16:00:23.994  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.compiler=<NA>
2021-03-09/16:00:23.994  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.name=Linux
2021-03-09/16:00:23.994  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.arch=amd64
2021-03-09/16:00:23.994  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.version=5.4.0-66-generic
2021-03-09/16:00:23.994  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.name=yons
2021-03-09/16:00:23.994  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.home=/home/yons
2021-03-09/16:00:23.994  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.dir=/home/yons/go/src/java-server
2021-03-09/16:00:23.995  INFO: org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:442) - Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@660acfb
2021-03-09/16:00:23.997 DEBUG: org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:118) - zookeeper.disableAutoWatchReset is false
2021-03-09/16:00:24.004 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/16:00:24.005  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/16:00:24.005  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:273) -  [DUBBO] Register: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:24.012  INFO: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:879) - Socket connection established to localhost/127.0.0.1:2181, initiating session
2021-03-09/16:00:24.013 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:952) - Session establishment request sent on localhost/127.0.0.1:2181
2021-03-09/16:00:24.017  INFO: org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1299) - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x10005336a8a0024, negotiated timeout = 40000
2021-03-09/16:00:24.019  INFO: org.apache.curator.framework.state.ConnectionStateManager.postState(ConnectionStateManager.java:228) - State change: CONNECTED
2021-03-09/16:00:24.025 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x10005336a8a0024, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,157,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers,F  response:: s{148,148,1615276212259,1615276212259,0,2,0,0,10,0,155} 
2021-03-09/16:00:24.030 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x10005336a8a0024, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,158,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D17823%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615276823667,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D17823%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615276823667 
2021-03-09/16:00:24.031  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:298) -  [DUBBO] Subscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:24.033 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x10005336a8a0024, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,158,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,F  response:: s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/16:00:24.036 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x10005336a8a0024, packet:: clientPath:null serverPath:null finished:false header:: 4,12  replyHeader:: 4,158,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,T  response:: v{},s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/16:00:24.037  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:387) -  [DUBBO] Notify urls for subscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:24.037 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:367) -  [DUBBO] original override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:24.037 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:369) -  [DUBBO] subscribe url: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:24.041 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:24.045 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:24.050 DEBUG: org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:92) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2021-03-09/16:00:24.051 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/16:00:29.239 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:29.260 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:29.287  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:29.288  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:60510,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:00:37.384 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:00:50.729 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:01:04.076 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:01:17.424 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:01:30.772 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:01:44.118 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:01:57.466 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 2ms
2021-03-09/16:02:10.813 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:02:24.158 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:02:37.503 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:02:50.849 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:03:04.195 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:03:17.541 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:03:30.888 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 2ms
2021-03-09/16:03:44.233 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:03:57.580 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:04:10.926 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:04:17.794 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:04:17.804 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:04:17.813  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:04:17.814  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:60760,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:04:24.273 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:04:37.618 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:04:47.169 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:04:47.179 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:04:47.192  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:04:47.192  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:60796,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:04:50.965 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 2ms
2021-03-09/16:05:04.300 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:05:11.481 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:05:11.491 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:05:11.503  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:05:11.504  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:60832,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:05:17.645 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:05:30.992 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:05:44.336 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:05:57.676 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:06:11.020 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:06:24.368 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:06:37.713 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:06:51.059 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:07:04.405 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:07:17.752 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:07:31.097 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:07:44.441 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:07:57.788 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 2ms
2021-03-09/16:08:11.132 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:08:24.478 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:08:37.821 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:08:51.163 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:09:04.510 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 2ms
2021-03-09/16:09:17.853 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:09:31.199 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:09:44.544 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:09:57.892 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:10:11.236 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:10:24.582 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:10:37.929 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:10:51.274 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 2ms
2021-03-09/16:11:04.612 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 2ms
2021-03-09/16:11:17.959 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:11:31.301 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:11:44.645 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:11:57.991 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:12:11.337 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:12:24.684 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:12:38.020 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:12:51.357 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:13:00.916 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:13:00.925 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:13:00.937  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:13:00.938  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:33140,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:13:04.703 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:13:18.051 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:13:31.398 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:13:44.741 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:13:58.085 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:14:11.430 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 2ms
2021-03-09/16:14:24.777 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:14:38.120 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:14:51.467 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:15:04.812 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:15:18.156 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:15:31.504 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:15:44.851 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 2ms
2021-03-09/16:15:58.198 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:16:11.535 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:16:24.872 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:16:38.219 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:16:51.566 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 2ms
2021-03-09/16:17:04.906 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:17:18.253 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 2ms
2021-03-09/16:17:31.597 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:17:44.943 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:17:58.285 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:18:11.631 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:18:24.976 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:18:38.321 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:18:51.666 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:19:05.010 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 2ms
2021-03-09/16:19:18.357 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:19:31.702 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:19:45.044 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:19:58.391 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:20:11.737 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:20:25.083 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:20:38.430 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:20:51.774 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:21:05.120 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:21:18.467 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 2ms
2021-03-09/16:21:31.808 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:21:45.155 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:21:58.500 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:22:11.846 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:22:25.183 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:22:38.530 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:22:51.877 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:23:05.215 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:23:18.560 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:23:31.905 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:23:45.248 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:23:45.739 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:23:45.748 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:23:45.758  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:23:45.759  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:34222,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:23:50.148 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:23:50.157 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:23:50.167  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:23:50.167  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:34240,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:23:58.593 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:24:01.609 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:24:01.620 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:24:01.632  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:24:01.633  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:34274,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:24:05.193 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:24:05.204 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:24:05.217  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:24:05.218  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:34298,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:24:11.938 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:24:25.272 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:24:38.617 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:24:51.964 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:25:05.309 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:25:18.656 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:25:32.003 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:25:45.351 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:25:58.692 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:26:12.040 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:26:25.386 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:26:38.733 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:26:52.078 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:27:05.424 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:27:18.759 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:27:32.105 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:27:45.452 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:27:58.798 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:28:12.144 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:28:25.491 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:28:38.838 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:28:52.176 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:29:05.521 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:29:18.864 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:29:32.210 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:29:45.555 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:29:58.903 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:30:12.249 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:30:25.596 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:30:38.930 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:30:52.277 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:31:05.624 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 2ms
2021-03-09/16:31:18.967 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:31:32.313 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:31:45.650 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:31:58.994 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:32:12.340 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:32:25.685 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:32:39.033 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:32:52.377 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:33:05.722 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:33:19.060 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 2ms
2021-03-09/16:33:32.405 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:33:45.753 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:33:59.099 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:34:12.434 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:34:25.780 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:34:39.125 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:34:52.459 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:35:05.804 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:35:19.143 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:35:32.478 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:35:45.825 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:35:59.169 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:36:12.515 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:36:25.861 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:36:39.203 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:36:52.543 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:37:05.885 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:37:19.220 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 0ms
2021-03-09/16:37:32.565 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:37:45.912 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:37:59.249 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:38:12.597 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:38:25.943 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:38:39.289 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a0024 after 1ms
2021-03-09/16:38:43.866 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:43.876 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:43.887  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:43.888  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:35414,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:47.521  INFO: com.alibaba.dubbo.config.DubboShutdownHook.run(DubboShutdownHook.java:56) -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:47.522  INFO: com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64) -  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=17823&timestamp=1615276823663], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:47.522  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:451) -  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=17823&timestamp=1615276823663, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:47.522  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(AbstractRegistry.java:284) -  [DUBBO] Unregister: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:47.525 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x10005336a8a0024, packet:: clientPath:null serverPath:null finished:false header:: 5,2  replyHeader:: 5,329,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D17823%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615276823667,-1  response:: null
2021-03-09/16:38:47.526  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:460) -  [DUBBO] Destroy unregister url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:47.526  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(AbstractRegistry.java:317) -  [DUBBO] Unsubscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:47.526  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:476) -  [DUBBO] Destroy unsubscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:47.526 DEBUG: org.apache.curator.framework.imps.CuratorFrameworkImpl.close(CuratorFrameworkImpl.java:282) - Closing
2021-03-09/16:38:47.526  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop(CuratorFrameworkImpl.java:821) - backgroundOperationsLoop exiting
2021-03-09/16:38:47.527 DEBUG: org.apache.curator.CuratorZookeeperClient.close(CuratorZookeeperClient.java:199) - Closing
2021-03-09/16:38:47.527 DEBUG: org.apache.curator.ConnectionState.close(ConnectionState.java:115) - Closing
2021-03-09/16:38:47.527 DEBUG: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:682) - Closing session: 0x10005336a8a0024
2021-03-09/16:38:47.527 DEBUG: org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370) - Closing client for session: 0x10005336a8a0024
2021-03-09/16:38:47.528 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x10005336a8a0024, packet:: clientPath:null serverPath:null finished:false header:: 6,-11  replyHeader:: 6,330,0  request:: null response:: null
2021-03-09/16:38:47.528 DEBUG: org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354) - Disconnecting client for session: 0x10005336a8a0024
2021-03-09/16:38:47.528  INFO: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:693) - Session: 0x10005336a8a0024 closed
2021-03-09/16:38:47.528  INFO: org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:522) - EventThread shut down for session: 0x10005336a8a0024
2021-03-09/16:38:47.529  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:432) -  [DUBBO] Close dubbo server: /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:47.531  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.close(AbstractServer.java:145) -  [DUBBO] Close NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:47.531  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:47.531  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: injvm://127.0.0.1/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:48.611 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/16:38:48.614 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/16:38:48.616 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@1782113663 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1433867275 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/16:38:48.619  INFO: org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: startup date [Tue Mar 09 16:38:48 CST 2021]; root of context hierarchy
2021-03-09/16:38:48.639 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/16:38:48.639 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/16:38:48.640 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@245672235 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1012570586 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/16:38:48.645  INFO: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [META-INF/spring/dubbo.provider.xml]
2021-03-09/16:38:48.655 DEBUG: org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2021-03-09/16:38:48.671 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2021-03-09/16:38:48.674 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://dubbo.apache.org/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/compat/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.3.xsd}
2021-03-09/16:38:48.675 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2021-03-09/16:38:48.696 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/compat/dubbo.xsd
2021-03-09/16:38:48.712 DEBUG: org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92) - Loading bean definitions
2021-03-09/16:38:48.718 DEBUG: org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://dubbo.apache.org/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2021-03-09/16:38:48.720  INFO:  - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2021-03-09/16:38:48.736 DEBUG: org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 5 bean definitions from location pattern [META-INF/spring/dubbo.provider.xml]
2021-03-09/16:38:48.737 DEBUG: org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:617) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/16:38:48.750 DEBUG: org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:734) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6adede5]
2021-03-09/16:38:48.751 DEBUG: org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:758) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@10bdf5e5]
2021-03-09/16:38:48.752 DEBUG: org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/16:38:48.752 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'user-info-server'
2021-03-09/16:38:48.752 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'user-info-server'
2021-03-09/16:38:48.759 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'user-info-server' to allow for resolving potential circular references
2021-03-09/16:38:48.777 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'user-info-server'
2021-03-09/16:38:48.777 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'ikurento'
2021-03-09/16:38:48.777 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'ikurento'
2021-03-09/16:38:48.777 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'ikurento' to allow for resolving potential circular references
2021-03-09/16:38:48.780 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'ikurento'
2021-03-09/16:38:48.780 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'dubbo'
2021-03-09/16:38:48.780 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'dubbo'
2021-03-09/16:38:48.781 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2021-03-09/16:38:48.787 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'dubbo'
2021-03-09/16:38:48.788 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'aaa'
2021-03-09/16:38:48.788 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'aaa'
2021-03-09/16:38:48.805 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:48.808  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:63) -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:48.808  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:81) -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:48.878 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:48.888 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'aaa' to allow for resolving potential circular references
2021-03-09/16:38:48.901 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'demoService'
2021-03-09/16:38:48.902 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'demoService'
2021-03-09/16:38:48.905 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'demoService' to allow for resolving potential circular references
2021-03-09/16:38:48.905 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'demoService'
2021-03-09/16:38:48.906 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'ikurento'
2021-03-09/16:38:48.907 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1671) - Invoking afterPropertiesSet() on bean with name 'aaa'
2021-03-09/16:38:48.907 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'user-info-server'
2021-03-09/16:38:48.908 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'dubbo'
2021-03-09/16:38:48.908 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'aaa'
2021-03-09/16:38:48.908 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'demoService'
2021-03-09/16:38:48.908 DEBUG: org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:785) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@45018215]
2021-03-09/16:38:48.909 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/16:38:48.909 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'aaa'
2021-03-09/16:38:48.910  INFO: com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:129) -  [DUBBO] The service ready on spring started. service: com.ikurento.user.UserProvider, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:48.951 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:48.957 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:48.962 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:48.966  INFO: com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:539) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to local registry, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:48.966  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:491) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:48.966  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:501) -  [DUBBO] Register dubbo service com.ikurento.user.UserProvider url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&owner=AlexStocks&pid=28103&registry=zookeeper&timestamp=1615279128914, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:48.970 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:48.975 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:48.983 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Using SLF4J as the default logging framework
2021-03-09/16:38:48.984 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.eventLoopThreads: 32
2021-03-09/16:38:48.989 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Buffer.address: available
2021-03-09/16:38:48.989 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe.theUnsafe: available
2021-03-09/16:38:48.989 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - sun.misc.Unsafe.copyMemory: available
2021-03-09/16:38:48.989 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Bits.unaligned: true
2021-03-09/16:38:48.989 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - Java version: 8
2021-03-09/16:38:48.990 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noUnsafe: false
2021-03-09/16:38:48.990 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe: available
2021-03-09/16:38:48.990 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noJavassist: false
2021-03-09/16:38:48.992 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Javassist: available
2021-03-09/16:38:48.992 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
2021-03-09/16:38:48.992 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-03-09/16:38:48.992 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noPreferDirect: false
2021-03-09/16:38:48.999 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noKeySetOptimization: false
2021-03-09/16:38:48.999 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-03-09/16:38:49.016 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - -Dio.netty.initialSeedUniquifier: 0x266d8055e29c89e6 (took 5 ms)
2021-03-09/16:38:49.031 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.allocator.type: unpooled
2021-03-09/16:38:49.031 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.threadLocalDirectBufferSize: 65536
2021-03-09/16:38:49.031 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-03-09/16:38:49.033 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:86) - Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo)
2021-03-09/16:38:49.033 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:81) - /proc/sys/net/core/somaxconn: 4096
2021-03-09/16:38:49.036  INFO: com.alibaba.dubbo.qos.server.Server.start(Server.java:100) -  [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:49.042 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:49.049 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:49.054 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:49.068 DEBUG: com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:73) -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:49.085  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:65) -  [DUBBO] Start NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:49.089 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:49.096  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:200) -  [DUBBO] Load registry store file /home/yons/.dubbo/dubbo-registry-user-info-server-127.0.0.1:2181.cache, data: {com.ikurento.user.UserProvider=empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=17823&side=provider&timeout=3000&timestamp=1615276823667}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:49.133  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.start(CuratorFrameworkImpl.java:235) - Starting
2021-03-09/16:38:49.134 DEBUG: org.apache.curator.CuratorZookeeperClient.start(CuratorZookeeperClient.java:183) - Starting
2021-03-09/16:38:49.134 DEBUG: org.apache.curator.ConnectionState.start(ConnectionState.java:107) - Starting
2021-03-09/16:38:49.134 DEBUG: org.apache.curator.ConnectionState.reset(ConnectionState.java:255) - reset
2021-03-09/16:38:49.141  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:zookeeper.version=3.4.14-4c25d480e66aadd371de8bd2fd8da255ac140bcf, built on 03/06/2019 16:18 GMT
2021-03-09/16:38:49.141  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:host.name=dml
2021-03-09/16:38:49.141  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.version=1.8.0_282
2021-03-09/16:38:49.141  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.vendor=Private Build
2021-03-09/16:38:49.141  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2021-03-09/16:38:49.141  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar
2021-03-09/16:38:49.141  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2021-03-09/16:38:49.141  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.io.tmpdir=/tmp
2021-03-09/16:38:49.141  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.compiler=<NA>
2021-03-09/16:38:49.141  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.name=Linux
2021-03-09/16:38:49.142  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.arch=amd64
2021-03-09/16:38:49.142  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.version=5.4.0-66-generic
2021-03-09/16:38:49.142  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.name=yons
2021-03-09/16:38:49.142  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.home=/home/yons
2021-03-09/16:38:49.142  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.dir=/home/yons/go/src/java-server
2021-03-09/16:38:49.143  INFO: org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:442) - Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@7dc19a70
2021-03-09/16:38:49.145 DEBUG: org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:118) - zookeeper.disableAutoWatchReset is false
2021-03-09/16:38:49.151 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/16:38:49.152  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/16:38:49.153  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:273) -  [DUBBO] Register: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:49.158  INFO: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:879) - Socket connection established to localhost/127.0.0.1:2181, initiating session
2021-03-09/16:38:49.159 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:952) - Session establishment request sent on localhost/127.0.0.1:2181
2021-03-09/16:38:49.162  INFO: org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1299) - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x10005336a8a003a, negotiated timeout = 40000
2021-03-09/16:38:49.165  INFO: org.apache.curator.framework.state.ConnectionStateManager.postState(ConnectionStateManager.java:228) - State change: CONNECTED
2021-03-09/16:38:49.170 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x10005336a8a003a, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,331,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers,F  response:: s{148,148,1615276212259,1615276212259,0,4,0,0,10,0,329} 
2021-03-09/16:38:49.176 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x10005336a8a003a, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,332,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D28103%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615279128918,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D28103%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615279128918 
2021-03-09/16:38:49.177  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:298) -  [DUBBO] Subscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:49.178 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x10005336a8a003a, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,332,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,F  response:: s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/16:38:49.181 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x10005336a8a003a, packet:: clientPath:null serverPath:null finished:false header:: 4,12  replyHeader:: 4,332,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,T  response:: v{},s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/16:38:49.182  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:387) -  [DUBBO] Notify urls for subscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918, urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:49.183 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:367) -  [DUBBO] original override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:49.183 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:369) -  [DUBBO] subscribe url: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918, override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:49.186 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:49.189 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:49.194 DEBUG: org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:92) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2021-03-09/16:38:49.195 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/16:38:53.485 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:53.501 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:53.511  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:38:53.512  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:35436,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/16:39:02.525 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:39:15.868 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:39:29.215 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:39:42.557 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:39:55.899 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:40:09.246 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:40:22.592 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:40:35.938 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:40:49.284 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:41:02.631 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:41:15.979 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:41:29.327 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:41:42.673 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:41:56.022 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 2ms
2021-03-09/16:42:09.368 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:42:22.709 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:42:36.057 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:42:49.403 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:43:02.749 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:43:16.097 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:43:29.441 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:43:42.777 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:43:56.124 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:44:09.471 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:44:22.816 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:44:36.161 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:44:49.506 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:45:02.853 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:45:16.199 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:45:29.546 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:45:42.893 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:45:56.241 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:46:09.584 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:46:22.932 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:46:36.279 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:46:49.625 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:47:02.972 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:47:16.306 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:47:29.649 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:47:42.992 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:47:56.335 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:48:09.681 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:48:23.029 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:48:36.377 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:48:49.723 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:49:03.071 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:49:16.417 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:49:29.764 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:49:43.109 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:49:56.455 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:50:09.802 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:50:23.149 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:50:36.489 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:50:49.823 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:51:03.168 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:51:16.517 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 2ms
2021-03-09/16:51:29.863 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:51:43.211 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:51:56.558 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 2ms
2021-03-09/16:52:09.901 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:52:23.241 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:52:36.587 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:52:49.933 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:53:03.281 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:53:16.627 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:53:29.972 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:53:43.320 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:53:56.666 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:54:10.013 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:54:23.361 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:54:36.705 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:54:50.053 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 2ms
2021-03-09/16:55:03.394 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 2ms
2021-03-09/16:55:16.739 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:55:30.086 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:55:43.421 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:55:56.769 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:56:10.114 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 2ms
2021-03-09/16:56:23.458 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:56:36.801 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:56:50.147 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:57:03.496 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:57:16.842 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:57:30.190 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:57:43.535 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:57:56.881 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:58:10.226 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:58:23.567 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:58:36.912 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:58:50.259 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:59:03.605 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:59:16.942 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/16:59:30.290 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 2ms
2021-03-09/16:59:43.637 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/16:59:56.984 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
