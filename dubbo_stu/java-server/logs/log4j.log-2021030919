2021-03-09/19:00:00.625 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:00:13.075 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:00:13.085 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:00:13.100  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:00:13.100  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47190,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:00:13.972 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:00:27.313 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:00:40.655 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:00:54.000 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:01:07.345 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:01:20.692 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:01:34.039 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:01:47.386 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:02:00.722 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:02:14.064 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:02:27.412 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:02:40.760 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:02:54.104 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:02:54.250 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:02:54.256  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47330,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:02:57.226 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:02:57.227  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47348,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:02:58.228  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47350,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:02:59.224 DEBUG: com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(HeartbeatHandler.java:74) -  [DUBBO] Received heartbeat from remote channel /172.18.0.1:47338, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:03:00.224  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:03:00.225  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47338,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:03:07.449 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:03:20.796 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:03:34.139 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:03:47.484 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:03:49.263 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:03:49.268  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47394,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:03:52.239 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:03:52.240  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47400,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:03:53.241  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47402,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:03:54.238 DEBUG: com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(HeartbeatHandler.java:74) -  [DUBBO] Received heartbeat from remote channel /172.18.0.1:47396, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:03:55.237  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:03:55.238  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:47396,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:04:00.832 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:04:14.179 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:04:27.524 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:04:40.870 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:04:54.215 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:05:07.560 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:05:20.904 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:05:34.249 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:05:47.594 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:06:00.936 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:06:14.283 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:06:27.628 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:06:40.976 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:06:54.321 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:07:07.666 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:07:21.009 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:07:34.357 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:07:47.704 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:08:01.049 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:08:14.394 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:08:27.741 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:08:41.088 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:08:54.423 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:09:07.760 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:09:21.104 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:09:34.451 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:09:47.796 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:10:01.143 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:10:14.490 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:10:27.836 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:10:41.171 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:10:54.518 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:11:07.864 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:11:21.208 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:11:34.556 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:11:47.890 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:12:01.236 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:12:14.584 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:12:27.923 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:12:41.271 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:12:54.619 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:13:07.962 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:13:21.305 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:13:34.648 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:13:47.994 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:14:01.340 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:14:14.687 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:14:28.034 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:14:41.376 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:14:54.724 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:15:08.070 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 2ms
2021-03-09/19:15:21.414 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:15:34.757 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:15:48.104 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:16:01.448 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:16:14.794 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:16:28.137 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:16:41.479 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:16:54.825 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:17:08.172 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:17:21.517 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:17:34.860 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:17:48.195 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:18:01.541 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:18:14.886 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:18:28.232 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:18:41.580 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:18:54.925 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:19:08.273 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:19:21.619 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:19:34.965 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 0ms
2021-03-09/19:19:48.311 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:20:01.657 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:20:15.004 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:20:28.346 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0025 after 1ms
2021-03-09/19:20:31.000  INFO: com.alibaba.dubbo.config.DubboShutdownHook.run(DubboShutdownHook.java:56) -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:31.001  INFO: com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64) -  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=28088&timestamp=1615287360139], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:31.001  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:451) -  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=28088&timestamp=1615287360139, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:31.001  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(AbstractRegistry.java:284) -  [DUBBO] Unregister: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:31.004 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0025, packet:: clientPath:null serverPath:null finished:false header:: 5,2  replyHeader:: 5,1112,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D28088%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615287360141,-1  response:: null
2021-03-09/19:20:31.004  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:460) -  [DUBBO] Destroy unregister url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:31.004  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(AbstractRegistry.java:317) -  [DUBBO] Unsubscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:31.004  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:476) -  [DUBBO] Destroy unsubscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:31.005 DEBUG: org.apache.curator.framework.imps.CuratorFrameworkImpl.close(CuratorFrameworkImpl.java:282) - Closing
2021-03-09/19:20:31.005  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop(CuratorFrameworkImpl.java:821) - backgroundOperationsLoop exiting
2021-03-09/19:20:31.005 DEBUG: org.apache.curator.CuratorZookeeperClient.close(CuratorZookeeperClient.java:199) - Closing
2021-03-09/19:20:31.005 DEBUG: org.apache.curator.ConnectionState.close(ConnectionState.java:115) - Closing
2021-03-09/19:20:31.006 DEBUG: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:682) - Closing session: 0x1000a5589cb0025
2021-03-09/19:20:31.006 DEBUG: org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370) - Closing client for session: 0x1000a5589cb0025
2021-03-09/19:20:31.007 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0025, packet:: clientPath:null serverPath:null finished:false header:: 6,-11  replyHeader:: 6,1113,0  request:: null response:: null
2021-03-09/19:20:31.007 DEBUG: org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354) - Disconnecting client for session: 0x1000a5589cb0025
2021-03-09/19:20:31.008  INFO: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:693) - Session: 0x1000a5589cb0025 closed
2021-03-09/19:20:31.008  INFO: org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:522) - EventThread shut down for session: 0x1000a5589cb0025
2021-03-09/19:20:31.008  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:432) -  [DUBBO] Close dubbo server: /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:31.010  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.close(AbstractServer.java:145) -  [DUBBO] Close NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:31.011  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:31.011  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: injvm://127.0.0.1/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:32.532 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/19:20:32.535 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/19:20:32.537 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@1782113663 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1433867275 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/19:20:32.541  INFO: org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: startup date [Tue Mar 09 19:20:32 CST 2021]; root of context hierarchy
2021-03-09/19:20:32.564 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/19:20:32.565 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/19:20:32.565 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@245672235 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1012570586 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/19:20:32.572  INFO: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [META-INF/spring/dubbo.provider.xml]
2021-03-09/19:20:32.587 DEBUG: org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2021-03-09/19:20:32.611 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2021-03-09/19:20:32.614 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://dubbo.apache.org/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/compat/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.3.xsd}
2021-03-09/19:20:32.615 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2021-03-09/19:20:32.637 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/compat/dubbo.xsd
2021-03-09/19:20:32.651 DEBUG: org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92) - Loading bean definitions
2021-03-09/19:20:32.656 DEBUG: org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://dubbo.apache.org/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2021-03-09/19:20:32.660  INFO:  - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2021-03-09/19:20:32.679 DEBUG: org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 5 bean definitions from location pattern [META-INF/spring/dubbo.provider.xml]
2021-03-09/19:20:32.680 DEBUG: org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:617) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/19:20:32.696 DEBUG: org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:734) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6adede5]
2021-03-09/19:20:32.697 DEBUG: org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:758) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@10bdf5e5]
2021-03-09/19:20:32.697 DEBUG: org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/19:20:32.698 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'user-info-server'
2021-03-09/19:20:32.698 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'user-info-server'
2021-03-09/19:20:32.705 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'user-info-server' to allow for resolving potential circular references
2021-03-09/19:20:32.724 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'user-info-server'
2021-03-09/19:20:32.725 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'ikurento'
2021-03-09/19:20:32.725 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'ikurento'
2021-03-09/19:20:32.725 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'ikurento' to allow for resolving potential circular references
2021-03-09/19:20:32.728 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'ikurento'
2021-03-09/19:20:32.728 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'dubbo'
2021-03-09/19:20:32.728 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'dubbo'
2021-03-09/19:20:32.729 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2021-03-09/19:20:32.738 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'dubbo'
2021-03-09/19:20:32.738 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'aaa'
2021-03-09/19:20:32.738 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'aaa'
2021-03-09/19:20:32.760 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:32.763  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:63) -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:32.763  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:81) -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:32.834 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:32.843 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'aaa' to allow for resolving potential circular references
2021-03-09/19:20:32.855 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'demoService'
2021-03-09/19:20:32.855 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'demoService'
2021-03-09/19:20:32.859 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'demoService' to allow for resolving potential circular references
2021-03-09/19:20:32.859 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'demoService'
2021-03-09/19:20:32.859 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'ikurento'
2021-03-09/19:20:32.861 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1671) - Invoking afterPropertiesSet() on bean with name 'aaa'
2021-03-09/19:20:32.861 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'user-info-server'
2021-03-09/19:20:32.861 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'dubbo'
2021-03-09/19:20:32.862 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'aaa'
2021-03-09/19:20:32.862 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'demoService'
2021-03-09/19:20:32.862 DEBUG: org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:785) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@45018215]
2021-03-09/19:20:32.862 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/19:20:32.863 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'aaa'
2021-03-09/19:20:32.863  INFO: com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:129) -  [DUBBO] The service ready on spring started. service: com.ikurento.user.UserProvider, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:32.903 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:32.908 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:32.912 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:32.917  INFO: com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:539) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to local registry, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:32.918  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:491) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:32.918  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:501) -  [DUBBO] Register dubbo service com.ikurento.user.UserProvider url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&owner=AlexStocks&pid=510&registry=zookeeper&timestamp=1615288832867, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:32.923 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:32.931 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:32.942 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Using SLF4J as the default logging framework
2021-03-09/19:20:32.944 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.eventLoopThreads: 32
2021-03-09/19:20:32.950 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Buffer.address: available
2021-03-09/19:20:32.950 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe.theUnsafe: available
2021-03-09/19:20:32.950 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - sun.misc.Unsafe.copyMemory: available
2021-03-09/19:20:32.950 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Bits.unaligned: true
2021-03-09/19:20:32.951 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - Java version: 8
2021-03-09/19:20:32.951 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noUnsafe: false
2021-03-09/19:20:32.951 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe: available
2021-03-09/19:20:32.951 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noJavassist: false
2021-03-09/19:20:32.953 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Javassist: available
2021-03-09/19:20:32.953 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
2021-03-09/19:20:32.954 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-03-09/19:20:32.954 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noPreferDirect: false
2021-03-09/19:20:32.963 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noKeySetOptimization: false
2021-03-09/19:20:32.963 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-03-09/19:20:32.983 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - -Dio.netty.initialSeedUniquifier: 0x81b04325cc47655d (took 5 ms)
2021-03-09/19:20:32.998 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.allocator.type: unpooled
2021-03-09/19:20:32.998 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.threadLocalDirectBufferSize: 65536
2021-03-09/19:20:32.998 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-03-09/19:20:32.999 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:86) - Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo)
2021-03-09/19:20:33.000 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:81) - /proc/sys/net/core/somaxconn: 4096
2021-03-09/19:20:33.003  INFO: com.alibaba.dubbo.qos.server.Server.start(Server.java:100) -  [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:33.011 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:33.022 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:33.028 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:33.049 DEBUG: com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:73) -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:33.066  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:65) -  [DUBBO] Start NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:33.069 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:33.076  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:200) -  [DUBBO] Load registry store file /home/yons/.dubbo/dubbo-registry-user-info-server-127.0.0.1:2181.cache, data: {com.ikurento.user.UserProvider=empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28088&side=provider&timeout=3000&timestamp=1615287360141}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:33.120  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.start(CuratorFrameworkImpl.java:235) - Starting
2021-03-09/19:20:33.121 DEBUG: org.apache.curator.CuratorZookeeperClient.start(CuratorZookeeperClient.java:183) - Starting
2021-03-09/19:20:33.121 DEBUG: org.apache.curator.ConnectionState.start(ConnectionState.java:107) - Starting
2021-03-09/19:20:33.121 DEBUG: org.apache.curator.ConnectionState.reset(ConnectionState.java:255) - reset
2021-03-09/19:20:33.156  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:zookeeper.version=3.4.14-4c25d480e66aadd371de8bd2fd8da255ac140bcf, built on 03/06/2019 16:18 GMT
2021-03-09/19:20:33.156  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:host.name=dml
2021-03-09/19:20:33.156  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.version=1.8.0_282
2021-03-09/19:20:33.156  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.vendor=Private Build
2021-03-09/19:20:33.156  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2021-03-09/19:20:33.156  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar
2021-03-09/19:20:33.156  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2021-03-09/19:20:33.156  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.io.tmpdir=/tmp
2021-03-09/19:20:33.156  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.compiler=<NA>
2021-03-09/19:20:33.156  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.name=Linux
2021-03-09/19:20:33.157  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.arch=amd64
2021-03-09/19:20:33.157  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.version=5.4.0-66-generic
2021-03-09/19:20:33.157  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.name=yons
2021-03-09/19:20:33.157  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.home=/home/yons
2021-03-09/19:20:33.157  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.dir=/home/yons/go/src/java-server
2021-03-09/19:20:33.158  INFO: org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:442) - Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@37313c65
2021-03-09/19:20:33.159 DEBUG: org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:118) - zookeeper.disableAutoWatchReset is false
2021-03-09/19:20:33.165 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/19:20:33.167  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/19:20:33.168  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:273) -  [DUBBO] Register: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:33.175  INFO: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:879) - Socket connection established to localhost/127.0.0.1:2181, initiating session
2021-03-09/19:20:33.176 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:952) - Session establishment request sent on localhost/127.0.0.1:2181
2021-03-09/19:20:33.179  INFO: org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1299) - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1000a5589cb002f, negotiated timeout = 40000
2021-03-09/19:20:33.181  INFO: org.apache.curator.framework.state.ConnectionStateManager.postState(ConnectionStateManager.java:228) - State change: CONNECTED
2021-03-09/19:20:33.187 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb002f, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,1114,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers,F  response:: s{148,148,1615276212259,1615276212259,0,12,0,0,10,0,1112} 
2021-03-09/19:20:33.192 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb002f, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,1115,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D510%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615288832870,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D510%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615288832870 
2021-03-09/19:20:33.193  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:298) -  [DUBBO] Subscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:33.195 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb002f, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,1115,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,F  response:: s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/19:20:33.198 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb002f, packet:: clientPath:null serverPath:null finished:false header:: 4,12  replyHeader:: 4,1115,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,T  response:: v{},s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/19:20:33.198  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:387) -  [DUBBO] Notify urls for subscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870, urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:33.198 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:367) -  [DUBBO] original override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:33.199 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:369) -  [DUBBO] subscribe url: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870, override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:33.202 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:33.205 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:20:33.210 DEBUG: org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:92) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2021-03-09/19:20:33.211 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/19:20:46.545 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb002f after 0ms
2021-03-09/19:20:59.894 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb002f after 1ms
2021-03-09/19:21:13.237 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb002f after 0ms
2021-03-09/19:21:26.315  INFO: com.alibaba.dubbo.config.DubboShutdownHook.run(DubboShutdownHook.java:56) -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:26.315  INFO: com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64) -  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=510&timestamp=1615288832867], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:26.316  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:451) -  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=510&timestamp=1615288832867, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:26.316  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(AbstractRegistry.java:284) -  [DUBBO] Unregister: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:26.319 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb002f, packet:: clientPath:null serverPath:null finished:false header:: 5,2  replyHeader:: 5,1116,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D510%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615288832870,-1  response:: null
2021-03-09/19:21:26.319 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb002f after 2ms
2021-03-09/19:21:26.319  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:460) -  [DUBBO] Destroy unregister url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:26.319  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(AbstractRegistry.java:317) -  [DUBBO] Unsubscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:26.320  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:476) -  [DUBBO] Destroy unsubscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:26.320 DEBUG: org.apache.curator.framework.imps.CuratorFrameworkImpl.close(CuratorFrameworkImpl.java:282) - Closing
2021-03-09/19:21:26.320  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop(CuratorFrameworkImpl.java:821) - backgroundOperationsLoop exiting
2021-03-09/19:21:26.320 DEBUG: org.apache.curator.CuratorZookeeperClient.close(CuratorZookeeperClient.java:199) - Closing
2021-03-09/19:21:26.321 DEBUG: org.apache.curator.ConnectionState.close(ConnectionState.java:115) - Closing
2021-03-09/19:21:26.321 DEBUG: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:682) - Closing session: 0x1000a5589cb002f
2021-03-09/19:21:26.321 DEBUG: org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370) - Closing client for session: 0x1000a5589cb002f
2021-03-09/19:21:26.322 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb002f, packet:: clientPath:null serverPath:null finished:false header:: 6,-11  replyHeader:: 6,1117,0  request:: null response:: null
2021-03-09/19:21:26.322 DEBUG: org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354) - Disconnecting client for session: 0x1000a5589cb002f
2021-03-09/19:21:26.322  INFO: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:693) - Session: 0x1000a5589cb002f closed
2021-03-09/19:21:26.323  INFO: org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:522) - EventThread shut down for session: 0x1000a5589cb002f
2021-03-09/19:21:26.323  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:432) -  [DUBBO] Close dubbo server: /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:26.324  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.close(AbstractServer.java:145) -  [DUBBO] Close NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:26.324  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:26.324  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: injvm://127.0.0.1/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:27.693 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/19:21:27.695 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/19:21:27.698 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@1782113663 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1433867275 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/19:21:27.700  INFO: org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: startup date [Tue Mar 09 19:21:27 CST 2021]; root of context hierarchy
2021-03-09/19:21:27.722 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/19:21:27.722 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/19:21:27.722 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@245672235 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1012570586 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/19:21:27.727  INFO: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [META-INF/spring/dubbo.provider.xml]
2021-03-09/19:21:27.736 DEBUG: org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2021-03-09/19:21:27.753 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2021-03-09/19:21:27.755 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://dubbo.apache.org/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/compat/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.3.xsd}
2021-03-09/19:21:27.756 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2021-03-09/19:21:27.776 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/compat/dubbo.xsd
2021-03-09/19:21:27.792 DEBUG: org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92) - Loading bean definitions
2021-03-09/19:21:27.797 DEBUG: org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://dubbo.apache.org/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2021-03-09/19:21:27.800  INFO:  - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2021-03-09/19:21:27.816 DEBUG: org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 5 bean definitions from location pattern [META-INF/spring/dubbo.provider.xml]
2021-03-09/19:21:27.817 DEBUG: org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:617) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/19:21:27.829 DEBUG: org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:734) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6adede5]
2021-03-09/19:21:27.831 DEBUG: org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:758) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@10bdf5e5]
2021-03-09/19:21:27.831 DEBUG: org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/19:21:27.831 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'user-info-server'
2021-03-09/19:21:27.832 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'user-info-server'
2021-03-09/19:21:27.838 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'user-info-server' to allow for resolving potential circular references
2021-03-09/19:21:27.857 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'user-info-server'
2021-03-09/19:21:27.857 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'ikurento'
2021-03-09/19:21:27.857 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'ikurento'
2021-03-09/19:21:27.858 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'ikurento' to allow for resolving potential circular references
2021-03-09/19:21:27.860 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'ikurento'
2021-03-09/19:21:27.861 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'dubbo'
2021-03-09/19:21:27.861 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'dubbo'
2021-03-09/19:21:27.861 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2021-03-09/19:21:27.868 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'dubbo'
2021-03-09/19:21:27.868 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'aaa'
2021-03-09/19:21:27.868 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'aaa'
2021-03-09/19:21:27.886 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:27.889  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:63) -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:27.889  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:81) -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:27.957 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:27.966 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'aaa' to allow for resolving potential circular references
2021-03-09/19:21:27.980 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'demoService'
2021-03-09/19:21:27.980 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'demoService'
2021-03-09/19:21:27.984 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'demoService' to allow for resolving potential circular references
2021-03-09/19:21:27.984 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'demoService'
2021-03-09/19:21:27.984 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'ikurento'
2021-03-09/19:21:27.986 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1671) - Invoking afterPropertiesSet() on bean with name 'aaa'
2021-03-09/19:21:27.986 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'user-info-server'
2021-03-09/19:21:27.986 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'dubbo'
2021-03-09/19:21:27.986 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'aaa'
2021-03-09/19:21:27.986 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'demoService'
2021-03-09/19:21:27.987 DEBUG: org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:785) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@45018215]
2021-03-09/19:21:27.987 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/19:21:27.988 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'aaa'
2021-03-09/19:21:27.988  INFO: com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:129) -  [DUBBO] The service ready on spring started. service: com.ikurento.user.UserProvider, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.028 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.034 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.040 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.046  INFO: com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:539) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to local registry, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.046  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:491) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.046  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:501) -  [DUBBO] Register dubbo service com.ikurento.user.UserProvider url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&owner=AlexStocks&pid=1212&registry=zookeeper&timestamp=1615288887993, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.050 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.057 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.067 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Using SLF4J as the default logging framework
2021-03-09/19:21:28.069 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.eventLoopThreads: 32
2021-03-09/19:21:28.075 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Buffer.address: available
2021-03-09/19:21:28.075 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe.theUnsafe: available
2021-03-09/19:21:28.075 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - sun.misc.Unsafe.copyMemory: available
2021-03-09/19:21:28.076 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Bits.unaligned: true
2021-03-09/19:21:28.076 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - Java version: 8
2021-03-09/19:21:28.076 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noUnsafe: false
2021-03-09/19:21:28.076 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe: available
2021-03-09/19:21:28.076 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noJavassist: false
2021-03-09/19:21:28.078 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Javassist: available
2021-03-09/19:21:28.078 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
2021-03-09/19:21:28.078 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-03-09/19:21:28.078 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noPreferDirect: false
2021-03-09/19:21:28.085 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noKeySetOptimization: false
2021-03-09/19:21:28.085 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-03-09/19:21:28.103 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - -Dio.netty.initialSeedUniquifier: 0x8cf43fa3055db240 (took 5 ms)
2021-03-09/19:21:28.117 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.allocator.type: unpooled
2021-03-09/19:21:28.117 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.threadLocalDirectBufferSize: 65536
2021-03-09/19:21:28.118 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-03-09/19:21:28.119 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:86) - Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo)
2021-03-09/19:21:28.119 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:81) - /proc/sys/net/core/somaxconn: 4096
2021-03-09/19:21:28.122  INFO: com.alibaba.dubbo.qos.server.Server.start(Server.java:100) -  [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.128 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.135 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.140 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.154 DEBUG: com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:73) -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.172  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:65) -  [DUBBO] Start NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.175 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.180  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:200) -  [DUBBO] Load registry store file /home/yons/.dubbo/dubbo-registry-user-info-server-127.0.0.1:2181.cache, data: {com.ikurento.user.UserProvider=empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=510&side=provider&timeout=3000&timestamp=1615288832870}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.216  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.start(CuratorFrameworkImpl.java:235) - Starting
2021-03-09/19:21:28.216 DEBUG: org.apache.curator.CuratorZookeeperClient.start(CuratorZookeeperClient.java:183) - Starting
2021-03-09/19:21:28.217 DEBUG: org.apache.curator.ConnectionState.start(ConnectionState.java:107) - Starting
2021-03-09/19:21:28.217 DEBUG: org.apache.curator.ConnectionState.reset(ConnectionState.java:255) - reset
2021-03-09/19:21:28.226  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:zookeeper.version=3.4.14-4c25d480e66aadd371de8bd2fd8da255ac140bcf, built on 03/06/2019 16:18 GMT
2021-03-09/19:21:28.227  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:host.name=dml
2021-03-09/19:21:28.227  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.version=1.8.0_282
2021-03-09/19:21:28.227  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.vendor=Private Build
2021-03-09/19:21:28.227  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2021-03-09/19:21:28.227  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar
2021-03-09/19:21:28.227  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2021-03-09/19:21:28.227  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.io.tmpdir=/tmp
2021-03-09/19:21:28.227  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.compiler=<NA>
2021-03-09/19:21:28.227  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.name=Linux
2021-03-09/19:21:28.228  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.arch=amd64
2021-03-09/19:21:28.228  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.version=5.4.0-66-generic
2021-03-09/19:21:28.228  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.name=yons
2021-03-09/19:21:28.228  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.home=/home/yons
2021-03-09/19:21:28.228  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.dir=/home/yons/go/src/java-server
2021-03-09/19:21:28.228  INFO: org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:442) - Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@7dc19a70
2021-03-09/19:21:28.230 DEBUG: org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:118) - zookeeper.disableAutoWatchReset is false
2021-03-09/19:21:28.235 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/19:21:28.236  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/19:21:28.236  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:273) -  [DUBBO] Register: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.242  INFO: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:879) - Socket connection established to localhost/127.0.0.1:2181, initiating session
2021-03-09/19:21:28.243 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:952) - Session establishment request sent on localhost/127.0.0.1:2181
2021-03-09/19:21:28.245  INFO: org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1299) - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1000a5589cb0030, negotiated timeout = 40000
2021-03-09/19:21:28.247  INFO: org.apache.curator.framework.state.ConnectionStateManager.postState(ConnectionStateManager.java:228) - State change: CONNECTED
2021-03-09/19:21:28.253 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0030, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,1118,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers,F  response:: s{148,148,1615276212259,1615276212259,0,14,0,0,10,0,1116} 
2021-03-09/19:21:28.258 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0030, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,1119,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D1212%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615288887996,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D1212%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615288887996 
2021-03-09/19:21:28.259  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:298) -  [DUBBO] Subscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.260 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0030, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,1119,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,F  response:: s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/19:21:28.262 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0030, packet:: clientPath:null serverPath:null finished:false header:: 4,12  replyHeader:: 4,1119,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,T  response:: v{},s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/19:21:28.262  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:387) -  [DUBBO] Notify urls for subscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996, urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.263 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:367) -  [DUBBO] original override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.263 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:369) -  [DUBBO] subscribe url: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996, override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.266 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.269 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:21:28.273 DEBUG: org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:92) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2021-03-09/19:21:28.274 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/19:21:41.610 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0030 after 1ms
2021-03-09/19:21:54.953 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0030 after 1ms
2021-03-09/19:22:08.297 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0030 after 0ms
2021-03-09/19:22:21.641 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0030 after 1ms
2021-03-09/19:22:34.987 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0030 after 0ms
2021-03-09/19:22:48.333 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0030 after 1ms
2021-03-09/19:22:53.269  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:22:53.270  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:48608,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:23:01.678 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0030 after 1ms
2021-03-09/19:23:15.024 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0030 after 1ms
2021-03-09/19:23:28.370 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0030 after 1ms
2021-03-09/19:23:41.717 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0030 after 1ms
2021-03-09/19:23:55.065 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0030 after 1ms
2021-03-09/19:24:07.558  INFO: com.alibaba.dubbo.config.DubboShutdownHook.run(DubboShutdownHook.java:56) -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:07.559  INFO: com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64) -  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=1212&timestamp=1615288887993], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:07.559  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:451) -  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=1212&timestamp=1615288887993, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:07.559  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(AbstractRegistry.java:284) -  [DUBBO] Unregister: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:07.562 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0030, packet:: clientPath:null serverPath:null finished:false header:: 5,2  replyHeader:: 5,1124,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D1212%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615288887996,-1  response:: null
2021-03-09/19:24:07.562 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0030 after 1ms
2021-03-09/19:24:07.562  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:460) -  [DUBBO] Destroy unregister url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:07.562  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(AbstractRegistry.java:317) -  [DUBBO] Unsubscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:07.563  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:476) -  [DUBBO] Destroy unsubscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:07.563 DEBUG: org.apache.curator.framework.imps.CuratorFrameworkImpl.close(CuratorFrameworkImpl.java:282) - Closing
2021-03-09/19:24:07.563  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop(CuratorFrameworkImpl.java:821) - backgroundOperationsLoop exiting
2021-03-09/19:24:07.563 DEBUG: org.apache.curator.CuratorZookeeperClient.close(CuratorZookeeperClient.java:199) - Closing
2021-03-09/19:24:07.563 DEBUG: org.apache.curator.ConnectionState.close(ConnectionState.java:115) - Closing
2021-03-09/19:24:07.564 DEBUG: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:682) - Closing session: 0x1000a5589cb0030
2021-03-09/19:24:07.564 DEBUG: org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370) - Closing client for session: 0x1000a5589cb0030
2021-03-09/19:24:07.565 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0030, packet:: clientPath:null serverPath:null finished:false header:: 6,-11  replyHeader:: 6,1125,0  request:: null response:: null
2021-03-09/19:24:07.565 DEBUG: org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354) - Disconnecting client for session: 0x1000a5589cb0030
2021-03-09/19:24:07.565  INFO: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:693) - Session: 0x1000a5589cb0030 closed
2021-03-09/19:24:07.565  INFO: org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:522) - EventThread shut down for session: 0x1000a5589cb0030
2021-03-09/19:24:07.566  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:432) -  [DUBBO] Close dubbo server: /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:07.567  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.close(AbstractServer.java:145) -  [DUBBO] Close NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:07.567  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:07.567  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: injvm://127.0.0.1/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.005 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/19:24:09.008 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/19:24:09.009 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@1782113663 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1433867275 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/19:24:09.012  INFO: org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: startup date [Tue Mar 09 19:24:09 CST 2021]; root of context hierarchy
2021-03-09/19:24:09.034 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/19:24:09.034 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/19:24:09.034 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@245672235 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1012570586 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/19:24:09.039  INFO: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [META-INF/spring/dubbo.provider.xml]
2021-03-09/19:24:09.048 DEBUG: org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2021-03-09/19:24:09.065 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2021-03-09/19:24:09.068 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://dubbo.apache.org/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/compat/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.3.xsd}
2021-03-09/19:24:09.069 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2021-03-09/19:24:09.093 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/compat/dubbo.xsd
2021-03-09/19:24:09.109 DEBUG: org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92) - Loading bean definitions
2021-03-09/19:24:09.114 DEBUG: org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://dubbo.apache.org/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2021-03-09/19:24:09.117  INFO:  - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2021-03-09/19:24:09.135 DEBUG: org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 5 bean definitions from location pattern [META-INF/spring/dubbo.provider.xml]
2021-03-09/19:24:09.136 DEBUG: org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:617) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/19:24:09.151 DEBUG: org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:734) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6adede5]
2021-03-09/19:24:09.153 DEBUG: org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:758) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@10bdf5e5]
2021-03-09/19:24:09.153 DEBUG: org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/19:24:09.153 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'user-info-server'
2021-03-09/19:24:09.154 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'user-info-server'
2021-03-09/19:24:09.160 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'user-info-server' to allow for resolving potential circular references
2021-03-09/19:24:09.182 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'user-info-server'
2021-03-09/19:24:09.182 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'ikurento'
2021-03-09/19:24:09.182 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'ikurento'
2021-03-09/19:24:09.183 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'ikurento' to allow for resolving potential circular references
2021-03-09/19:24:09.186 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'ikurento'
2021-03-09/19:24:09.186 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'dubbo'
2021-03-09/19:24:09.187 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'dubbo'
2021-03-09/19:24:09.187 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2021-03-09/19:24:09.196 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'dubbo'
2021-03-09/19:24:09.197 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'aaa'
2021-03-09/19:24:09.197 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'aaa'
2021-03-09/19:24:09.216 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.219  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:63) -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.219  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:81) -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.287 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.295 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'aaa' to allow for resolving potential circular references
2021-03-09/19:24:09.311 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'demoService'
2021-03-09/19:24:09.311 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'demoService'
2021-03-09/19:24:09.315 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'demoService' to allow for resolving potential circular references
2021-03-09/19:24:09.315 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'demoService'
2021-03-09/19:24:09.316 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'ikurento'
2021-03-09/19:24:09.317 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1671) - Invoking afterPropertiesSet() on bean with name 'aaa'
2021-03-09/19:24:09.317 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'user-info-server'
2021-03-09/19:24:09.318 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'dubbo'
2021-03-09/19:24:09.318 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'aaa'
2021-03-09/19:24:09.318 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'demoService'
2021-03-09/19:24:09.319 DEBUG: org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:785) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@45018215]
2021-03-09/19:24:09.319 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/19:24:09.320 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'aaa'
2021-03-09/19:24:09.320  INFO: com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:129) -  [DUBBO] The service ready on spring started. service: com.ikurento.user.UserProvider, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.360 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.366 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.371 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.376  INFO: com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:539) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to local registry, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.376  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:491) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.377  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:501) -  [DUBBO] Register dubbo service com.ikurento.user.UserProvider url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&owner=AlexStocks&pid=1757&registry=zookeeper&timestamp=1615289049324, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.379 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.386 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.394 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Using SLF4J as the default logging framework
2021-03-09/19:24:09.395 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.eventLoopThreads: 32
2021-03-09/19:24:09.400 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Buffer.address: available
2021-03-09/19:24:09.400 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe.theUnsafe: available
2021-03-09/19:24:09.401 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - sun.misc.Unsafe.copyMemory: available
2021-03-09/19:24:09.401 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Bits.unaligned: true
2021-03-09/19:24:09.401 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - Java version: 8
2021-03-09/19:24:09.401 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noUnsafe: false
2021-03-09/19:24:09.401 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe: available
2021-03-09/19:24:09.402 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noJavassist: false
2021-03-09/19:24:09.403 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Javassist: available
2021-03-09/19:24:09.404 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
2021-03-09/19:24:09.404 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-03-09/19:24:09.404 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noPreferDirect: false
2021-03-09/19:24:09.412 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noKeySetOptimization: false
2021-03-09/19:24:09.412 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-03-09/19:24:09.430 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - -Dio.netty.initialSeedUniquifier: 0x70cff09c8ebf12b8 (took 4 ms)
2021-03-09/19:24:09.445 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.allocator.type: unpooled
2021-03-09/19:24:09.445 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.threadLocalDirectBufferSize: 65536
2021-03-09/19:24:09.445 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-03-09/19:24:09.447 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:86) - Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo)
2021-03-09/19:24:09.447 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:81) - /proc/sys/net/core/somaxconn: 4096
2021-03-09/19:24:09.451  INFO: com.alibaba.dubbo.qos.server.Server.start(Server.java:100) -  [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.456 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.464 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.471 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.486 DEBUG: com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:73) -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.504  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:65) -  [DUBBO] Start NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.508 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.515  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:200) -  [DUBBO] Load registry store file /home/yons/.dubbo/dubbo-registry-user-info-server-127.0.0.1:2181.cache, data: {com.ikurento.user.UserProvider=empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1212&side=provider&timeout=3000&timestamp=1615288887996}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.555  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.start(CuratorFrameworkImpl.java:235) - Starting
2021-03-09/19:24:09.555 DEBUG: org.apache.curator.CuratorZookeeperClient.start(CuratorZookeeperClient.java:183) - Starting
2021-03-09/19:24:09.556 DEBUG: org.apache.curator.ConnectionState.start(ConnectionState.java:107) - Starting
2021-03-09/19:24:09.556 DEBUG: org.apache.curator.ConnectionState.reset(ConnectionState.java:255) - reset
2021-03-09/19:24:09.563  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:zookeeper.version=3.4.14-4c25d480e66aadd371de8bd2fd8da255ac140bcf, built on 03/06/2019 16:18 GMT
2021-03-09/19:24:09.564  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:host.name=dml
2021-03-09/19:24:09.564  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.version=1.8.0_282
2021-03-09/19:24:09.564  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.vendor=Private Build
2021-03-09/19:24:09.564  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2021-03-09/19:24:09.564  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar
2021-03-09/19:24:09.564  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2021-03-09/19:24:09.564  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.io.tmpdir=/tmp
2021-03-09/19:24:09.564  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.compiler=<NA>
2021-03-09/19:24:09.564  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.name=Linux
2021-03-09/19:24:09.564  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.arch=amd64
2021-03-09/19:24:09.565  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.version=5.4.0-66-generic
2021-03-09/19:24:09.565  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.name=yons
2021-03-09/19:24:09.565  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.home=/home/yons
2021-03-09/19:24:09.565  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.dir=/home/yons/go/src/java-server
2021-03-09/19:24:09.565  INFO: org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:442) - Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@1e4f4a5c
2021-03-09/19:24:09.567 DEBUG: org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:118) - zookeeper.disableAutoWatchReset is false
2021-03-09/19:24:09.572 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/19:24:09.573  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/19:24:09.574  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:273) -  [DUBBO] Register: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.580  INFO: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:879) - Socket connection established to localhost/127.0.0.1:2181, initiating session
2021-03-09/19:24:09.581 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:952) - Session establishment request sent on localhost/127.0.0.1:2181
2021-03-09/19:24:09.584  INFO: org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1299) - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1000a5589cb0032, negotiated timeout = 40000
2021-03-09/19:24:09.587  INFO: org.apache.curator.framework.state.ConnectionStateManager.postState(ConnectionStateManager.java:228) - State change: CONNECTED
2021-03-09/19:24:09.592 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0032, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,1126,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers,F  response:: s{148,148,1615276212259,1615276212259,0,16,0,0,10,0,1124} 
2021-03-09/19:24:09.597 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0032, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,1127,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D1757%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615289049327,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D1757%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615289049327 
2021-03-09/19:24:09.598  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:298) -  [DUBBO] Subscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.599 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0032, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,1127,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,F  response:: s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/19:24:09.602 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0032, packet:: clientPath:null serverPath:null finished:false header:: 4,12  replyHeader:: 4,1127,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,T  response:: v{},s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-09/19:24:09.602  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:387) -  [DUBBO] Notify urls for subscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.603 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:367) -  [DUBBO] original override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.603 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:369) -  [DUBBO] subscribe url: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.606 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.610 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:09.614 DEBUG: org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:92) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2021-03-09/19:24:09.615 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/19:24:22.949 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:24:36.292 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:24:37.021 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:37.037 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:37.049  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:37.049  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:48720,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:24:49.641 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:25:02.985 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:25:16.323 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:25:29.658 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:25:43.006 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:25:56.348 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:26:09.696 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:26:23.042 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:26:36.390 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:26:49.732 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:27:03.080 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:27:16.427 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:27:29.774 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:27:43.113 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:27:56.458 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:28:09.806 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:28:23.148 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:28:36.496 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:28:49.832 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:29:03.176 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:29:16.510 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:29:29.858 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:29:43.193 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:29:56.536 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:30:09.884 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:30:23.219 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:30:36.563 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 2ms
2021-03-09/19:30:49.909 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:31:03.256 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:31:16.602 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:31:29.949 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:31:43.296 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:31:56.640 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:32:09.988 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:32:23.333 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:32:36.677 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:32:50.019 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:33:03.367 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:33:16.708 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:33:30.052 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:33:43.393 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:33:56.737 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:34:10.082 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:34:23.428 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:34:36.775 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:34:50.118 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:35:03.464 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:35:16.811 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:35:29.149 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:29.150  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:29.150  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:49446,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:30.150  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:30.151  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:49450,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:30.156 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:35:32.140 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:32.143  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:49456,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:35.136  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:35.137  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:49458,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:42.267 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:42.269  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:49472,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:43.501 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:35:45.261 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:45.262  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:49476,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:47.259 DEBUG: com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(HeartbeatHandler.java:74) -  [DUBBO] Received heartbeat from remote channel /172.18.0.1:49474, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:48.259  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:48.259  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:49474,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:48.260  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:49478,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/19:35:56.844 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:36:10.191 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:36:23.539 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:36:36.886 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:36:50.233 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:37:03.576 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:37:16.922 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:37:30.270 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:37:43.612 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:37:56.957 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:38:10.303 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:38:23.650 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:38:36.997 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:38:50.331 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:39:03.676 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:39:17.017 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:39:30.361 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:39:43.707 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:39:57.055 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:40:10.403 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:40:23.748 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:40:37.094 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:40:50.439 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:41:03.786 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:41:17.131 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:41:30.476 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:41:43.822 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:41:57.170 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:42:10.513 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:42:23.852 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:42:37.185 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:42:50.530 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:43:03.876 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:43:17.223 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:43:30.565 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:43:43.912 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:43:57.260 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:44:10.606 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:44:23.953 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:44:37.300 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:44:50.647 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:45:03.992 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:45:17.339 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:45:30.685 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:45:44.029 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:45:57.377 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:46:10.716 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:46:24.057 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:46:37.404 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:46:50.749 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:47:04.086 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:47:17.432 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:47:30.780 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:47:44.126 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:47:57.473 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:48:10.820 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:48:24.164 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:48:37.500 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:48:50.845 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:49:04.192 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:49:17.538 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:49:30.875 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:49:44.220 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:49:57.561 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:50:10.909 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:50:24.246 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:50:37.582 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:50:50.924 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 5ms
2021-03-09/19:51:04.267 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:51:17.615 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:51:30.961 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:51:44.308 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:51:57.650 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:52:10.985 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:52:24.328 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:52:37.673 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:52:51.021 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:53:04.364 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:53:17.709 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:53:31.046 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:53:44.385 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:53:57.732 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:54:11.077 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:54:24.425 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:54:37.770 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:54:51.115 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:55:04.461 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:55:17.797 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:55:31.145 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:55:44.485 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:55:57.826 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:56:11.162 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:56:24.509 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:56:37.853 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:56:51.198 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:57:04.541 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:57:17.889 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:57:31.234 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:57:44.582 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:57:57.917 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-09/19:58:11.261 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:58:24.608 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:58:37.955 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:58:51.301 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:59:04.645 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:59:17.992 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:59:31.339 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:59:44.685 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-09/19:59:58.029 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
