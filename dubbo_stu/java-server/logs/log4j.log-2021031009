2021-03-10/09:00:10.369 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:00:23.715 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:00:37.061 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:00:50.408 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:01:03.746 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:01:17.083 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:01:30.421 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:01:43.765 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:01:57.109 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:02:10.454 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:02:23.798 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:02:37.145 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:02:50.488 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:03:03.835 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:03:17.181 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:03:30.528 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:03:43.865 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:03:57.211 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:04:10.557 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:04:23.904 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:04:37.249 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:04:50.595 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:05:03.942 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:05:17.276 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:05:30.622 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:05:43.969 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:05:57.313 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:06:10.658 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:06:23.994 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:06:37.341 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:06:50.683 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:07:04.029 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:07:17.371 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:07:30.716 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:07:44.060 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:07:57.407 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:08:10.750 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:08:24.088 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:08:37.426 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:08:50.770 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:09:04.106 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:09:17.452 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:09:30.798 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:09:44.144 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:09:57.477 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:10:10.820 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:10:24.160 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:10:37.504 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:10:50.847 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:11:04.190 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:11:17.537 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:11:30.884 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:11:44.231 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:11:57.578 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:12:10.924 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:12:24.265 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:12:37.612 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:12:50.959 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:13:04.306 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:13:17.653 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:13:30.999 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:13:44.347 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:13:57.682 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:14:11.026 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:14:24.373 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:14:37.720 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:14:51.067 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:15:04.413 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:15:17.748 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:15:31.093 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:15:44.440 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:15:57.786 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:16:11.134 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:16:24.480 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:16:37.825 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:16:51.168 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:17:04.513 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:17:17.859 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:17:31.205 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:17:44.551 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:17:57.893 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:18:11.240 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:18:24.582 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:18:37.925 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:18:51.269 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:19:04.613 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:19:17.959 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:19:31.306 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:19:44.653 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:19:58.000 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:20:11.345 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:20:24.692 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:20:38.039 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:20:51.385 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:21:04.721 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:21:18.068 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:21:31.414 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:21:44.762 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:21:58.109 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:22:11.455 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:22:24.803 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:22:38.141 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:22:51.487 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:23:04.833 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:23:18.180 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:23:31.527 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:23:44.874 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:23:58.221 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:24:11.568 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:24:24.915 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:24:38.253 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:24:51.597 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:25:04.940 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:25:18.285 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:25:31.629 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:25:44.975 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:25:58.320 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:26:11.661 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:26:25.008 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:26:38.342 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:26:51.689 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:27:05.036 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:27:18.383 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:27:31.728 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 0ms
2021-03-10/09:27:45.073 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:27:58.407 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:28:11.753 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:28:25.100 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:28:38.445 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:28:51.791 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:29:05.134 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:29:18.481 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:29:31.828 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 1ms
2021-03-10/09:29:42.380  INFO: com.alibaba.dubbo.config.DubboShutdownHook.run(DubboShutdownHook.java:56) -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:42.381  INFO: com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64) -  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=1757&timestamp=1615289049324], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:42.381  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:451) -  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=1757&timestamp=1615289049324, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:42.381  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(AbstractRegistry.java:284) -  [DUBBO] Unregister: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:42.390 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0032, packet:: clientPath:null serverPath:null finished:false header:: 5,2  replyHeader:: 5,1192,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D1757%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615289049327,-1  response:: null
2021-03-10/09:29:42.390 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0032 after 5ms
2021-03-10/09:29:42.390  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:460) -  [DUBBO] Destroy unregister url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:42.390  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(AbstractRegistry.java:317) -  [DUBBO] Unsubscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:42.391  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:476) -  [DUBBO] Destroy unsubscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:42.391 DEBUG: org.apache.curator.framework.imps.CuratorFrameworkImpl.close(CuratorFrameworkImpl.java:282) - Closing
2021-03-10/09:29:42.392  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop(CuratorFrameworkImpl.java:821) - backgroundOperationsLoop exiting
2021-03-10/09:29:42.392 DEBUG: org.apache.curator.CuratorZookeeperClient.close(CuratorZookeeperClient.java:199) - Closing
2021-03-10/09:29:42.392 DEBUG: org.apache.curator.ConnectionState.close(ConnectionState.java:115) - Closing
2021-03-10/09:29:42.394 DEBUG: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:682) - Closing session: 0x1000a5589cb0032
2021-03-10/09:29:42.394 DEBUG: org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370) - Closing client for session: 0x1000a5589cb0032
2021-03-10/09:29:42.395 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0032, packet:: clientPath:null serverPath:null finished:false header:: 6,-11  replyHeader:: 6,1193,0  request:: null response:: null
2021-03-10/09:29:42.395 DEBUG: org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354) - Disconnecting client for session: 0x1000a5589cb0032
2021-03-10/09:29:42.395  INFO: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:693) - Session: 0x1000a5589cb0032 closed
2021-03-10/09:29:42.395  INFO: org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:522) - EventThread shut down for session: 0x1000a5589cb0032
2021-03-10/09:29:42.396  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:432) -  [DUBBO] Close dubbo server: /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:42.398  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.close(AbstractServer.java:145) -  [DUBBO] Close NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:42.399  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:42.399  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: injvm://127.0.0.1/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:43.762 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-10/09:29:43.765 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-10/09:29:43.767 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@1782113663 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1433867275 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-10/09:29:43.770  INFO: org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: startup date [Wed Mar 10 09:29:43 CST 2021]; root of context hierarchy
2021-03-10/09:29:43.793 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-10/09:29:43.793 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-10/09:29:43.793 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@245672235 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1012570586 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-10/09:29:43.798  INFO: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [META-INF/spring/dubbo.provider.xml]
2021-03-10/09:29:43.813 DEBUG: org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2021-03-10/09:29:43.840 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2021-03-10/09:29:43.843 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://dubbo.apache.org/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/compat/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.3.xsd}
2021-03-10/09:29:43.844 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2021-03-10/09:29:43.865 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/compat/dubbo.xsd
2021-03-10/09:29:43.880 DEBUG: org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92) - Loading bean definitions
2021-03-10/09:29:43.887 DEBUG: org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://dubbo.apache.org/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2021-03-10/09:29:43.890  INFO:  - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2021-03-10/09:29:43.909 DEBUG: org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 5 bean definitions from location pattern [META-INF/spring/dubbo.provider.xml]
2021-03-10/09:29:43.909 DEBUG: org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:617) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-10/09:29:43.924 DEBUG: org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:734) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6adede5]
2021-03-10/09:29:43.925 DEBUG: org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:758) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@10bdf5e5]
2021-03-10/09:29:43.926 DEBUG: org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-10/09:29:43.926 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'user-info-server'
2021-03-10/09:29:43.926 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'user-info-server'
2021-03-10/09:29:43.935 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'user-info-server' to allow for resolving potential circular references
2021-03-10/09:29:43.960 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'user-info-server'
2021-03-10/09:29:43.961 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'ikurento'
2021-03-10/09:29:43.961 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'ikurento'
2021-03-10/09:29:43.961 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'ikurento' to allow for resolving potential circular references
2021-03-10/09:29:43.964 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'ikurento'
2021-03-10/09:29:43.964 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'dubbo'
2021-03-10/09:29:43.964 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'dubbo'
2021-03-10/09:29:43.964 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2021-03-10/09:29:43.973 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'dubbo'
2021-03-10/09:29:43.973 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'aaa'
2021-03-10/09:29:43.973 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'aaa'
2021-03-10/09:29:43.996 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.001  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:63) -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.001  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:81) -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.076 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.087 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'aaa' to allow for resolving potential circular references
2021-03-10/09:29:44.101 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'demoService'
2021-03-10/09:29:44.101 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'demoService'
2021-03-10/09:29:44.105 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'demoService' to allow for resolving potential circular references
2021-03-10/09:29:44.105 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'demoService'
2021-03-10/09:29:44.105 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'ikurento'
2021-03-10/09:29:44.107 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1671) - Invoking afterPropertiesSet() on bean with name 'aaa'
2021-03-10/09:29:44.107 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'user-info-server'
2021-03-10/09:29:44.107 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'dubbo'
2021-03-10/09:29:44.107 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'aaa'
2021-03-10/09:29:44.107 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'demoService'
2021-03-10/09:29:44.108 DEBUG: org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:785) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@45018215]
2021-03-10/09:29:44.108 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-10/09:29:44.109 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'aaa'
2021-03-10/09:29:44.109  INFO: com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:129) -  [DUBBO] The service ready on spring started. service: com.ikurento.user.UserProvider, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.151 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.157 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.161 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.167  INFO: com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:539) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to local registry, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.167  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:491) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.167  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:501) -  [DUBBO] Register dubbo service com.ikurento.user.UserProvider url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&owner=AlexStocks&pid=19319&registry=zookeeper&timestamp=1615339784114, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.171 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.177 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.186 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Using SLF4J as the default logging framework
2021-03-10/09:29:44.188 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.eventLoopThreads: 32
2021-03-10/09:29:44.193 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Buffer.address: available
2021-03-10/09:29:44.193 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe.theUnsafe: available
2021-03-10/09:29:44.194 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - sun.misc.Unsafe.copyMemory: available
2021-03-10/09:29:44.194 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Bits.unaligned: true
2021-03-10/09:29:44.194 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - Java version: 8
2021-03-10/09:29:44.194 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noUnsafe: false
2021-03-10/09:29:44.195 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe: available
2021-03-10/09:29:44.195 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noJavassist: false
2021-03-10/09:29:44.197 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Javassist: available
2021-03-10/09:29:44.197 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
2021-03-10/09:29:44.197 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-03-10/09:29:44.197 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noPreferDirect: false
2021-03-10/09:29:44.205 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noKeySetOptimization: false
2021-03-10/09:29:44.205 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-03-10/09:29:44.223 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - -Dio.netty.initialSeedUniquifier: 0x03de0cb598b8e9c4 (took 4 ms)
2021-03-10/09:29:44.238 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.allocator.type: unpooled
2021-03-10/09:29:44.238 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.threadLocalDirectBufferSize: 65536
2021-03-10/09:29:44.238 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-03-10/09:29:44.240 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:86) - Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo)
2021-03-10/09:29:44.240 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:81) - /proc/sys/net/core/somaxconn: 4096
2021-03-10/09:29:44.244  INFO: com.alibaba.dubbo.qos.server.Server.start(Server.java:100) -  [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.250 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.258 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.264 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.279 DEBUG: com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:73) -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.296  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:65) -  [DUBBO] Start NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.298 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.304  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:200) -  [DUBBO] Load registry store file /home/yons/.dubbo/dubbo-registry-user-info-server-127.0.0.1:2181.cache, data: {com.ikurento.user.UserProvider=empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=1757&side=provider&timeout=3000&timestamp=1615289049327}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.349  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.start(CuratorFrameworkImpl.java:235) - Starting
2021-03-10/09:29:44.349 DEBUG: org.apache.curator.CuratorZookeeperClient.start(CuratorZookeeperClient.java:183) - Starting
2021-03-10/09:29:44.350 DEBUG: org.apache.curator.ConnectionState.start(ConnectionState.java:107) - Starting
2021-03-10/09:29:44.350 DEBUG: org.apache.curator.ConnectionState.reset(ConnectionState.java:255) - reset
2021-03-10/09:29:44.358  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:zookeeper.version=3.4.14-4c25d480e66aadd371de8bd2fd8da255ac140bcf, built on 03/06/2019 16:18 GMT
2021-03-10/09:29:44.358  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:host.name=dml
2021-03-10/09:29:44.358  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.version=1.8.0_282
2021-03-10/09:29:44.358  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.vendor=Private Build
2021-03-10/09:29:44.359  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2021-03-10/09:29:44.359  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar
2021-03-10/09:29:44.359  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2021-03-10/09:29:44.359  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.io.tmpdir=/tmp
2021-03-10/09:29:44.359  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.compiler=<NA>
2021-03-10/09:29:44.359  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.name=Linux
2021-03-10/09:29:44.359  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.arch=amd64
2021-03-10/09:29:44.360  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.version=5.4.0-66-generic
2021-03-10/09:29:44.360  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.name=yons
2021-03-10/09:29:44.360  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.home=/home/yons
2021-03-10/09:29:44.360  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.dir=/home/yons/go/src/java-server
2021-03-10/09:29:44.361  INFO: org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:442) - Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@1e4f4a5c
2021-03-10/09:29:44.363 DEBUG: org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:118) - zookeeper.disableAutoWatchReset is false
2021-03-10/09:29:44.370 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-10/09:29:44.372  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-10/09:29:44.372  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:273) -  [DUBBO] Register: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.380  INFO: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:879) - Socket connection established to localhost/127.0.0.1:2181, initiating session
2021-03-10/09:29:44.381 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:952) - Session establishment request sent on localhost/127.0.0.1:2181
2021-03-10/09:29:44.384  INFO: org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1299) - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1000a5589cb0039, negotiated timeout = 40000
2021-03-10/09:29:44.386  INFO: org.apache.curator.framework.state.ConnectionStateManager.postState(ConnectionStateManager.java:228) - State change: CONNECTED
2021-03-10/09:29:44.393 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0039, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,1194,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers,F  response:: s{148,148,1615276212259,1615276212259,0,18,0,0,10,0,1192} 
2021-03-10/09:29:44.398 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0039, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,1195,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D19319%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615339784117,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D19319%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615339784117 
2021-03-10/09:29:44.399  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:298) -  [DUBBO] Subscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.400 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0039, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,1195,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,F  response:: s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-10/09:29:44.403 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0039, packet:: clientPath:null serverPath:null finished:false header:: 4,12  replyHeader:: 4,1195,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,T  response:: v{},s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-10/09:29:44.403  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:387) -  [DUBBO] Notify urls for subscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.404 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:367) -  [DUBBO] original override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.404 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:369) -  [DUBBO] subscribe url: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.407 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.411 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:44.417 DEBUG: org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:92) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2021-03-10/09:29:44.417 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-10/09:29:50.107 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:50.122 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:50.132  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:50.132  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:41706,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:29:57.748 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:30:11.096 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:30:24.444 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:30:37.779 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:30:51.123 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:31:04.469 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:31:17.814 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:31:31.158 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:31:44.505 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:31:57.845 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:32:11.189 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:32:24.534 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:32:37.881 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:32:51.230 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:33:04.572 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:33:17.917 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:33:31.265 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:33:44.609 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:33:57.953 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:34:11.300 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:34:24.633 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:34:37.980 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:34:51.324 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:35:04.670 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:35:18.016 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:35:31.360 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:35:44.694 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:35:58.041 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:36:11.386 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:36:24.731 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 3ms
2021-03-10/09:36:38.069 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:36:51.403 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:37:04.748 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:37:18.096 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:37:31.434 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:37:44.781 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:37:58.129 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:38:11.466 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:38:24.812 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:38:38.154 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:38:51.497 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:39:04.836 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:39:18.182 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:39:31.529 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:39:44.871 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:39:58.215 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:40:11.560 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:40:24.908 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:40:38.255 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:40:51.596 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:41:04.939 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:41:18.287 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:41:31.634 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:41:44.976 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:41:58.323 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:42:11.670 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:42:25.013 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:42:38.357 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:42:51.704 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:43:00.306 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:43:00.307  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:42518,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:43:03.298 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:43:03.299  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:42528,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:43:04.299  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:42530,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:43:05.043 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:43:05.294 DEBUG: com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler.received(HeartbeatHandler.java:74) -  [DUBBO] Received heartbeat from remote channel /172.18.0.1:42524, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:43:06.298  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:43:06.299  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:42524,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:43:18.388 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:43:31.736 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:43:45.075 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:43:58.420 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:44:11.769 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:44:25.115 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:44:38.461 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:44:51.808 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:45:05.148 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:45:18.493 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:45:31.841 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:45:45.189 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:45:58.524 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:46:11.872 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:46:25.217 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:46:38.565 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:46:51.908 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:47:05.252 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:47:18.597 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:47:31.944 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:47:45.292 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:47:58.632 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:48:11.978 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:48:25.324 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:48:38.660 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:48:52.006 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:49:05.353 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:49:18.698 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:49:32.046 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:49:45.392 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:49:58.739 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:50:12.086 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:50:25.433 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:50:38.777 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:50:52.112 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:51:05.456 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:51:18.801 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:51:32.149 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:51:45.490 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:51:58.827 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:52:12.174 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:52:25.517 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:52:38.863 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:52:52.202 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:53:05.548 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:53:18.886 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:53:32.233 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:53:45.576 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 0ms
2021-03-10/09:53:58.923 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 1ms
2021-03-10/09:54:12.050  INFO: com.alibaba.dubbo.config.DubboShutdownHook.run(DubboShutdownHook.java:56) -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:12.051  INFO: com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64) -  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=19319&timestamp=1615339784114], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:12.051  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:451) -  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=19319&timestamp=1615339784114, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:12.051  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(AbstractRegistry.java:284) -  [DUBBO] Unregister: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:12.057 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0039, packet:: clientPath:null serverPath:null finished:false header:: 5,2  replyHeader:: 5,1212,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D19319%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615339784117,-1  response:: null
2021-03-10/09:54:12.057 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb0039 after 2ms
2021-03-10/09:54:12.057  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:460) -  [DUBBO] Destroy unregister url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:12.058  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(AbstractRegistry.java:317) -  [DUBBO] Unsubscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:12.058  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:476) -  [DUBBO] Destroy unsubscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:12.058 DEBUG: org.apache.curator.framework.imps.CuratorFrameworkImpl.close(CuratorFrameworkImpl.java:282) - Closing
2021-03-10/09:54:12.059  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop(CuratorFrameworkImpl.java:821) - backgroundOperationsLoop exiting
2021-03-10/09:54:12.059 DEBUG: org.apache.curator.CuratorZookeeperClient.close(CuratorZookeeperClient.java:199) - Closing
2021-03-10/09:54:12.059 DEBUG: org.apache.curator.ConnectionState.close(ConnectionState.java:115) - Closing
2021-03-10/09:54:12.061 DEBUG: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:682) - Closing session: 0x1000a5589cb0039
2021-03-10/09:54:12.061 DEBUG: org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370) - Closing client for session: 0x1000a5589cb0039
2021-03-10/09:54:12.062 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb0039, packet:: clientPath:null serverPath:null finished:false header:: 6,-11  replyHeader:: 6,1213,0  request:: null response:: null
2021-03-10/09:54:12.062 DEBUG: org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354) - Disconnecting client for session: 0x1000a5589cb0039
2021-03-10/09:54:12.062  INFO: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:693) - Session: 0x1000a5589cb0039 closed
2021-03-10/09:54:12.062  INFO: org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:522) - EventThread shut down for session: 0x1000a5589cb0039
2021-03-10/09:54:12.062 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1146) - An exception was thrown while closing send thread for session 0x1000a5589cb0039 : Unable to read additional data from server sessionid 0x1000a5589cb0039, likely server has closed socket
2021-03-10/09:54:12.063  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:432) -  [DUBBO] Close dubbo server: /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:12.064  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.close(AbstractServer.java:145) -  [DUBBO] Close NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:12.065  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:12.065  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: injvm://127.0.0.1/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:13.648 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-10/09:54:13.651 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-10/09:54:13.653 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@1782113663 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1433867275 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-10/09:54:13.656  INFO: org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: startup date [Wed Mar 10 09:54:13 CST 2021]; root of context hierarchy
2021-03-10/09:54:13.680 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-10/09:54:13.681 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-10/09:54:13.681 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@245672235 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1012570586 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-10/09:54:13.686  INFO: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [META-INF/spring/dubbo.provider.xml]
2021-03-10/09:54:13.703 DEBUG: org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2021-03-10/09:54:13.728 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2021-03-10/09:54:13.731 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://dubbo.apache.org/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/compat/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.3.xsd}
2021-03-10/09:54:13.732 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2021-03-10/09:54:13.752 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/compat/dubbo.xsd
2021-03-10/09:54:13.768 DEBUG: org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92) - Loading bean definitions
2021-03-10/09:54:13.775 DEBUG: org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://dubbo.apache.org/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2021-03-10/09:54:13.779  INFO:  - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2021-03-10/09:54:13.797 DEBUG: org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 5 bean definitions from location pattern [META-INF/spring/dubbo.provider.xml]
2021-03-10/09:54:13.798 DEBUG: org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:617) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-10/09:54:13.812 DEBUG: org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:734) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6adede5]
2021-03-10/09:54:13.813 DEBUG: org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:758) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@10bdf5e5]
2021-03-10/09:54:13.814 DEBUG: org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-10/09:54:13.815 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'user-info-server'
2021-03-10/09:54:13.815 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'user-info-server'
2021-03-10/09:54:13.821 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'user-info-server' to allow for resolving potential circular references
2021-03-10/09:54:13.841 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'user-info-server'
2021-03-10/09:54:13.841 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'ikurento'
2021-03-10/09:54:13.841 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'ikurento'
2021-03-10/09:54:13.841 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'ikurento' to allow for resolving potential circular references
2021-03-10/09:54:13.844 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'ikurento'
2021-03-10/09:54:13.844 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'dubbo'
2021-03-10/09:54:13.845 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'dubbo'
2021-03-10/09:54:13.845 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2021-03-10/09:54:13.853 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'dubbo'
2021-03-10/09:54:13.853 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'aaa'
2021-03-10/09:54:13.853 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'aaa'
2021-03-10/09:54:13.875 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:13.878  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:63) -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:13.878  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:81) -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:13.954 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:13.963 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'aaa' to allow for resolving potential circular references
2021-03-10/09:54:13.979 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'demoService'
2021-03-10/09:54:13.979 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'demoService'
2021-03-10/09:54:13.983 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'demoService' to allow for resolving potential circular references
2021-03-10/09:54:13.983 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'demoService'
2021-03-10/09:54:13.983 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'ikurento'
2021-03-10/09:54:13.985 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1671) - Invoking afterPropertiesSet() on bean with name 'aaa'
2021-03-10/09:54:13.985 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'user-info-server'
2021-03-10/09:54:13.985 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'dubbo'
2021-03-10/09:54:13.985 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'aaa'
2021-03-10/09:54:13.986 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'demoService'
2021-03-10/09:54:13.986 DEBUG: org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:785) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@45018215]
2021-03-10/09:54:13.986 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-10/09:54:13.987 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'aaa'
2021-03-10/09:54:13.987  INFO: com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:129) -  [DUBBO] The service ready on spring started. service: com.ikurento.user.UserProvider, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.025 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.031 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.036 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.040  INFO: com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:539) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to local registry, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.041  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:491) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=22562&side=provider&timeout=3000&timestamp=1615341253994, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.041  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:501) -  [DUBBO] Register dubbo service com.ikurento.user.UserProvider url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=22562&side=provider&timeout=3000&timestamp=1615341253994 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&owner=AlexStocks&pid=22562&registry=zookeeper&timestamp=1615341253991, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.044 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.049 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.058 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Using SLF4J as the default logging framework
2021-03-10/09:54:14.059 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.eventLoopThreads: 32
2021-03-10/09:54:14.065 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Buffer.address: available
2021-03-10/09:54:14.065 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe.theUnsafe: available
2021-03-10/09:54:14.065 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - sun.misc.Unsafe.copyMemory: available
2021-03-10/09:54:14.065 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Bits.unaligned: true
2021-03-10/09:54:14.066 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - Java version: 8
2021-03-10/09:54:14.066 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noUnsafe: false
2021-03-10/09:54:14.066 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe: available
2021-03-10/09:54:14.066 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noJavassist: false
2021-03-10/09:54:14.068 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Javassist: available
2021-03-10/09:54:14.068 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
2021-03-10/09:54:14.068 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-03-10/09:54:14.069 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noPreferDirect: false
2021-03-10/09:54:14.077 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noKeySetOptimization: false
2021-03-10/09:54:14.077 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-03-10/09:54:14.095 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - -Dio.netty.initialSeedUniquifier: 0x5b2f6c7d2aa1023c (took 4 ms)
2021-03-10/09:54:14.109 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.allocator.type: unpooled
2021-03-10/09:54:14.109 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.threadLocalDirectBufferSize: 65536
2021-03-10/09:54:14.109 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-03-10/09:54:14.111 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:86) - Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo)
2021-03-10/09:54:14.111 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:81) - /proc/sys/net/core/somaxconn: 4096
2021-03-10/09:54:14.114  INFO: com.alibaba.dubbo.qos.server.Server.start(Server.java:100) -  [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.120 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.128 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.134 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.151 DEBUG: com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:73) -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.167  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:65) -  [DUBBO] Start NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.169 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.174  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:200) -  [DUBBO] Load registry store file /home/yons/.dubbo/dubbo-registry-user-info-server-127.0.0.1:2181.cache, data: {com.ikurento.user.UserProvider=empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=19319&side=provider&timeout=3000&timestamp=1615339784117}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.214  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.start(CuratorFrameworkImpl.java:235) - Starting
2021-03-10/09:54:14.215 DEBUG: org.apache.curator.CuratorZookeeperClient.start(CuratorZookeeperClient.java:183) - Starting
2021-03-10/09:54:14.215 DEBUG: org.apache.curator.ConnectionState.start(ConnectionState.java:107) - Starting
2021-03-10/09:54:14.215 DEBUG: org.apache.curator.ConnectionState.reset(ConnectionState.java:255) - reset
2021-03-10/09:54:14.234  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:zookeeper.version=3.4.14-4c25d480e66aadd371de8bd2fd8da255ac140bcf, built on 03/06/2019 16:18 GMT
2021-03-10/09:54:14.235  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:host.name=dml
2021-03-10/09:54:14.235  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.version=1.8.0_282
2021-03-10/09:54:14.235  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.vendor=Private Build
2021-03-10/09:54:14.235  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2021-03-10/09:54:14.235  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar
2021-03-10/09:54:14.235  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2021-03-10/09:54:14.236  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.io.tmpdir=/tmp
2021-03-10/09:54:14.236  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.compiler=<NA>
2021-03-10/09:54:14.236  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.name=Linux
2021-03-10/09:54:14.236  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.arch=amd64
2021-03-10/09:54:14.236  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.version=5.4.0-66-generic
2021-03-10/09:54:14.236  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.name=yons
2021-03-10/09:54:14.236  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.home=/home/yons
2021-03-10/09:54:14.236  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.dir=/home/yons/go/src/java-server
2021-03-10/09:54:14.237  INFO: org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:442) - Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@1e4f4a5c
2021-03-10/09:54:14.238 DEBUG: org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:118) - zookeeper.disableAutoWatchReset is false
2021-03-10/09:54:14.245 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-10/09:54:14.247  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-10/09:54:14.248  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:273) -  [DUBBO] Register: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=22562&side=provider&timeout=3000&timestamp=1615341253994, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.255  INFO: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:879) - Socket connection established to localhost/127.0.0.1:2181, initiating session
2021-03-10/09:54:14.256 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:952) - Session establishment request sent on localhost/127.0.0.1:2181
2021-03-10/09:54:14.258  INFO: org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1299) - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1000a5589cb003c, negotiated timeout = 40000
2021-03-10/09:54:14.260  INFO: org.apache.curator.framework.state.ConnectionStateManager.postState(ConnectionStateManager.java:228) - State change: CONNECTED
2021-03-10/09:54:14.267 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb003c, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,1214,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers,F  response:: s{148,148,1615276212259,1615276212259,0,20,0,0,10,0,1212} 
2021-03-10/09:54:14.272 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb003c, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,1215,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D22562%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615341253994,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D22562%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615341253994 
2021-03-10/09:54:14.273  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:298) -  [DUBBO] Subscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=22562&side=provider&timeout=3000&timestamp=1615341253994, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.274 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb003c, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,1215,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,F  response:: s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-10/09:54:14.276 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a5589cb003c, packet:: clientPath:null serverPath:null finished:false header:: 4,12  replyHeader:: 4,1215,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,T  response:: v{},s{150,150,1615276212266,1615276212266,0,0,0,0,10,0,150} 
2021-03-10/09:54:14.277  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:387) -  [DUBBO] Notify urls for subscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=22562&side=provider&timeout=3000&timestamp=1615341253994, urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=22562&side=provider&timeout=3000&timestamp=1615341253994], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.278 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:367) -  [DUBBO] original override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=22562&side=provider&timeout=3000&timestamp=1615341253994], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.278 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:369) -  [DUBBO] subscribe url: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=22562&side=provider&timeout=3000&timestamp=1615341253994, override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=22562&side=provider&timeout=3000&timestamp=1615341253994], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.282 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.285 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:54:14.290 DEBUG: org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:92) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2021-03-10/09:54:14.291 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-10/09:54:27.621 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 0ms
2021-03-10/09:54:40.965 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 0ms
2021-03-10/09:54:54.308 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 0ms
2021-03-10/09:55:07.654 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 0ms
2021-03-10/09:55:21.002 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 1ms
2021-03-10/09:55:34.344 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 0ms
2021-03-10/09:55:47.688 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 0ms
2021-03-10/09:56:01.033 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 1ms
2021-03-10/09:56:14.370 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 0ms
2021-03-10/09:56:27.718 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 1ms
2021-03-10/09:56:41.065 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 1ms
2021-03-10/09:56:54.409 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 0ms
2021-03-10/09:57:07.756 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 0ms
2021-03-10/09:57:21.101 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 1ms
2021-03-10/09:57:34.445 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 0ms
2021-03-10/09:57:47.794 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 2ms
2021-03-10/09:58:01.141 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 1ms
2021-03-10/09:58:14.487 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 1ms
2021-03-10/09:58:19.468 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:58:19.470 ERROR: com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:116) -  [DUBBO] Got unchecked and undeclared exception which called by 172.18.0.1. service: com.ikurento.user.UserProvider, method: GetUser, exception: com.alibaba.dubbo.rpc.RpcException: Failed to invoke remote proxy method GetUser to registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&export=dubbo%3A%2F%2F172.18.0.1%3A20010%2Fcom.ikurento.user.UserProvider%3Fanyhost%3Dtrue%26application%3Duser-info-server%26bean.name%3Daaa%26bind.ip%3D172.18.0.1%26bind.port%3D20010%26default.timeout%3D10000%26dubbo%3D2.0.2%26environment%3Dproduct%26generic%3Dfalse%26interface%3Dcom.ikurento.user.UserProvider%26methods%3DGetUser%26owner%3DAlexStocks%26pid%3D22562%26side%3Dprovider%26timeout%3D3000%26timestamp%3D1615341253994&owner=AlexStocks&pid=22562&registry=zookeeper&timestamp=1615341253991, cause: Not found method "GetUser" in class com.ikurento.user.UserProviderImpl., dubbo version: 2.6.5, current host: 172.18.0.1
com.alibaba.dubbo.rpc.RpcException: Failed to invoke remote proxy method GetUser to registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&export=dubbo%3A%2F%2F172.18.0.1%3A20010%2Fcom.ikurento.user.UserProvider%3Fanyhost%3Dtrue%26application%3Duser-info-server%26bean.name%3Daaa%26bind.ip%3D172.18.0.1%26bind.port%3D20010%26default.timeout%3D10000%26dubbo%3D2.0.2%26environment%3Dproduct%26generic%3Dfalse%26interface%3Dcom.ikurento.user.UserProvider%26methods%3DGetUser%26owner%3DAlexStocks%26pid%3D22562%26side%3Dprovider%26timeout%3D3000%26timestamp%3D1615341253994&owner=AlexStocks&pid=22562&registry=zookeeper&timestamp=1615341253991, cause: Not found method "GetUser" in class com.ikurento.user.UserProviderImpl.
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:80)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:52)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:62)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:73)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:138)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:104)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:173)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.dubbo.common.bytecode.NoSuchMethodException: Not found method "GetUser" in class com.ikurento.user.UserProviderImpl.
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:76)
	... 26 more
2021-03-10/09:58:19.475 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:58:19.475 ERROR: com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:116) -  [DUBBO] Got unchecked and undeclared exception which called by 172.18.0.1. service: com.ikurento.user.UserProvider, method: GetUser, exception: com.alibaba.dubbo.rpc.RpcException: Failed to invoke remote proxy method GetUser to registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&export=dubbo%3A%2F%2F172.18.0.1%3A20010%2Fcom.ikurento.user.UserProvider%3Fanyhost%3Dtrue%26application%3Duser-info-server%26bean.name%3Daaa%26bind.ip%3D172.18.0.1%26bind.port%3D20010%26default.timeout%3D10000%26dubbo%3D2.0.2%26environment%3Dproduct%26generic%3Dfalse%26interface%3Dcom.ikurento.user.UserProvider%26methods%3DGetUser%26owner%3DAlexStocks%26pid%3D22562%26side%3Dprovider%26timeout%3D3000%26timestamp%3D1615341253994&owner=AlexStocks&pid=22562&registry=zookeeper&timestamp=1615341253991, cause: Not found method "GetUser" in class com.ikurento.user.UserProviderImpl., dubbo version: 2.6.5, current host: 172.18.0.1
com.alibaba.dubbo.rpc.RpcException: Failed to invoke remote proxy method GetUser to registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&export=dubbo%3A%2F%2F172.18.0.1%3A20010%2Fcom.ikurento.user.UserProvider%3Fanyhost%3Dtrue%26application%3Duser-info-server%26bean.name%3Daaa%26bind.ip%3D172.18.0.1%26bind.port%3D20010%26default.timeout%3D10000%26dubbo%3D2.0.2%26environment%3Dproduct%26generic%3Dfalse%26interface%3Dcom.ikurento.user.UserProvider%26methods%3DGetUser%26owner%3DAlexStocks%26pid%3D22562%26side%3Dprovider%26timeout%3D3000%26timestamp%3D1615341253994&owner=AlexStocks&pid=22562&registry=zookeeper&timestamp=1615341253991, cause: Not found method "GetUser" in class com.ikurento.user.UserProviderImpl.
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:80)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:52)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:62)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:75)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:42)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:78)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:73)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:138)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:38)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:72)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:104)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:173)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.dubbo.common.bytecode.NoSuchMethodException: Not found method "GetUser" in class com.ikurento.user.UserProviderImpl.
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:76)
	... 26 more
2021-03-10/09:58:19.477  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:58:19.478  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:43790,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=22562&side=provider&timeout=3000&timestamp=1615341253994, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-10/09:58:27.832 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 0ms
2021-03-10/09:58:41.180 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 1ms
2021-03-10/09:58:54.524 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 0ms
2021-03-10/09:59:07.868 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 0ms
2021-03-10/09:59:21.215 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 1ms
2021-03-10/09:59:34.560 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 0ms
2021-03-10/09:59:47.900 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a5589cb003c after 1ms
