2021-03-09/17:00:10.332 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:00:23.678 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:00:37.020 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:00:50.367 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:01:03.713 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:01:17.060 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:01:30.408 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 2ms
2021-03-09/17:01:43.755 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:01:57.091 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:02:10.433 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:02:23.780 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:02:37.128 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:02:50.465 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:03:03.807 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:03:17.153 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:03:30.497 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:03:43.844 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:03:57.185 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:04:10.531 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:04:23.866 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:04:37.213 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:04:50.560 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:05:03.907 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:05:17.249 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:05:30.585 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:05:43.935 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 2ms
2021-03-09/17:05:57.281 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 2ms
2021-03-09/17:06:10.629 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 2ms
2021-03-09/17:06:23.962 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:06:37.304 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:06:50.645 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:07:03.990 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 2ms
2021-03-09/17:07:17.337 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:07:30.683 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:07:44.028 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:07:57.376 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:08:10.721 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:08:24.064 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:08:37.408 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:08:50.744 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:09:04.090 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:09:17.428 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:09:30.774 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:09:44.122 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:09:57.465 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:10:10.811 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:10:24.157 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:10:37.505 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:10:50.849 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:11:04.193 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:11:17.540 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:11:30.884 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:11:44.228 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:11:57.573 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:12:10.920 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:12:24.265 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:12:37.608 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:12:50.955 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:13:04.302 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:13:17.649 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:13:30.993 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:13:44.336 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:13:57.680 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:14:11.027 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:14:24.373 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:14:37.715 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:14:51.061 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:15:04.405 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:15:17.741 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:15:31.078 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:15:44.421 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 2ms
2021-03-09/17:15:57.768 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:16:11.112 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:16:24.458 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:16:37.806 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:16:51.152 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:17:04.497 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:17:17.844 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:17:31.190 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:17:44.537 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:17:57.876 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:18:11.221 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:18:24.568 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:18:37.913 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:18:51.260 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 0ms
2021-03-09/17:19:04.607 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x10005336a8a003a after 1ms
2021-03-09/17:19:08.776  INFO: com.alibaba.dubbo.config.DubboShutdownHook.run(DubboShutdownHook.java:56) -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:19:08.777  INFO: com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64) -  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=28103&timestamp=1615279128914], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:19:08.777  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:451) -  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=28103&timestamp=1615279128914, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:19:08.777  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(AbstractRegistry.java:284) -  [DUBBO] Unregister: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:19:08.780 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x10005336a8a003a, packet:: clientPath:null serverPath:null finished:false header:: 5,2  replyHeader:: 5,521,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D28103%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615279128918,-1  response:: null
2021-03-09/17:19:08.780  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:460) -  [DUBBO] Destroy unregister url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:19:08.781  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(AbstractRegistry.java:317) -  [DUBBO] Unsubscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:19:08.781  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:476) -  [DUBBO] Destroy unsubscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:19:08.781 DEBUG: org.apache.curator.framework.imps.CuratorFrameworkImpl.close(CuratorFrameworkImpl.java:282) - Closing
2021-03-09/17:19:08.781  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop(CuratorFrameworkImpl.java:821) - backgroundOperationsLoop exiting
2021-03-09/17:19:08.782 DEBUG: org.apache.curator.CuratorZookeeperClient.close(CuratorZookeeperClient.java:199) - Closing
2021-03-09/17:19:08.782 DEBUG: org.apache.curator.ConnectionState.close(ConnectionState.java:115) - Closing
2021-03-09/17:19:08.782 DEBUG: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:682) - Closing session: 0x10005336a8a003a
2021-03-09/17:19:08.782 DEBUG: org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370) - Closing client for session: 0x10005336a8a003a
2021-03-09/17:19:08.784 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x10005336a8a003a, packet:: clientPath:null serverPath:null finished:false header:: 6,-11  replyHeader:: 6,522,0  request:: null response:: null
2021-03-09/17:19:08.784 DEBUG: org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354) - Disconnecting client for session: 0x10005336a8a003a
2021-03-09/17:19:08.784  INFO: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:693) - Session: 0x10005336a8a003a closed
2021-03-09/17:19:08.784  INFO: org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:522) - EventThread shut down for session: 0x10005336a8a003a
2021-03-09/17:19:08.785  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:432) -  [DUBBO] Close dubbo server: /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:19:08.785  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.close(AbstractServer.java:145) -  [DUBBO] Close NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:19:08.786  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:19:08.786  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: injvm://127.0.0.1/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:51.653 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/17:38:51.656 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/17:38:51.658 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@1782113663 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1433867275 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/17:38:51.661  INFO: org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: startup date [Tue Mar 09 17:38:51 CST 2021]; root of context hierarchy
2021-03-09/17:38:51.682 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/17:38:51.682 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/17:38:51.682 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@245672235 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1012570586 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/17:38:51.687  INFO: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [META-INF/spring/dubbo.provider.xml]
2021-03-09/17:38:51.696 DEBUG: org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2021-03-09/17:38:51.712 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2021-03-09/17:38:51.715 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://dubbo.apache.org/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/compat/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.3.xsd}
2021-03-09/17:38:51.716 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2021-03-09/17:38:51.738 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/compat/dubbo.xsd
2021-03-09/17:38:51.754 DEBUG: org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92) - Loading bean definitions
2021-03-09/17:38:51.760 DEBUG: org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://dubbo.apache.org/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2021-03-09/17:38:51.762  INFO:  - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2021-03-09/17:38:51.778 DEBUG: org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 5 bean definitions from location pattern [META-INF/spring/dubbo.provider.xml]
2021-03-09/17:38:51.779 DEBUG: org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:617) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/17:38:51.793 DEBUG: org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:734) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6adede5]
2021-03-09/17:38:51.794 DEBUG: org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:758) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@10bdf5e5]
2021-03-09/17:38:51.794 DEBUG: org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/17:38:51.795 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'user-info-server'
2021-03-09/17:38:51.795 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'user-info-server'
2021-03-09/17:38:51.801 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'user-info-server' to allow for resolving potential circular references
2021-03-09/17:38:51.820 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'user-info-server'
2021-03-09/17:38:51.820 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'ikurento'
2021-03-09/17:38:51.820 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'ikurento'
2021-03-09/17:38:51.820 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'ikurento' to allow for resolving potential circular references
2021-03-09/17:38:51.823 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'ikurento'
2021-03-09/17:38:51.823 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'dubbo'
2021-03-09/17:38:51.823 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'dubbo'
2021-03-09/17:38:51.823 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2021-03-09/17:38:51.830 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'dubbo'
2021-03-09/17:38:51.831 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'aaa'
2021-03-09/17:38:51.831 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'aaa'
2021-03-09/17:38:51.848 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:51.852  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:63) -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:51.852  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:81) -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:51.930 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:51.940 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'aaa' to allow for resolving potential circular references
2021-03-09/17:38:51.956 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'demoService'
2021-03-09/17:38:51.956 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'demoService'
2021-03-09/17:38:51.960 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'demoService' to allow for resolving potential circular references
2021-03-09/17:38:51.960 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'demoService'
2021-03-09/17:38:51.961 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'ikurento'
2021-03-09/17:38:51.962 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1671) - Invoking afterPropertiesSet() on bean with name 'aaa'
2021-03-09/17:38:51.963 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'user-info-server'
2021-03-09/17:38:51.963 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'dubbo'
2021-03-09/17:38:51.963 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'aaa'
2021-03-09/17:38:51.963 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'demoService'
2021-03-09/17:38:51.964 DEBUG: org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:785) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@45018215]
2021-03-09/17:38:51.964 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/17:38:51.965 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'aaa'
2021-03-09/17:38:51.965  INFO: com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:129) -  [DUBBO] The service ready on spring started. service: com.ikurento.user.UserProvider, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.005 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.012 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.017 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.023  INFO: com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:539) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to local registry, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.023  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:491) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=10716&side=provider&timeout=3000&timestamp=1615282731972, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.023  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:501) -  [DUBBO] Register dubbo service com.ikurento.user.UserProvider url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=10716&side=provider&timeout=3000&timestamp=1615282731972 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&owner=AlexStocks&pid=10716&registry=zookeeper&timestamp=1615282731970, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.026 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.032 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.044 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Using SLF4J as the default logging framework
2021-03-09/17:38:52.045 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.eventLoopThreads: 32
2021-03-09/17:38:52.050 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Buffer.address: available
2021-03-09/17:38:52.050 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe.theUnsafe: available
2021-03-09/17:38:52.050 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - sun.misc.Unsafe.copyMemory: available
2021-03-09/17:38:52.051 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Bits.unaligned: true
2021-03-09/17:38:52.051 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - Java version: 8
2021-03-09/17:38:52.051 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noUnsafe: false
2021-03-09/17:38:52.051 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe: available
2021-03-09/17:38:52.052 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noJavassist: false
2021-03-09/17:38:52.055 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Javassist: available
2021-03-09/17:38:52.055 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
2021-03-09/17:38:52.055 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-03-09/17:38:52.055 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noPreferDirect: false
2021-03-09/17:38:52.065 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noKeySetOptimization: false
2021-03-09/17:38:52.065 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-03-09/17:38:52.087 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - -Dio.netty.initialSeedUniquifier: 0x3b31c6265e250b8d (took 5 ms)
2021-03-09/17:38:52.102 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.allocator.type: unpooled
2021-03-09/17:38:52.102 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.threadLocalDirectBufferSize: 65536
2021-03-09/17:38:52.102 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-03-09/17:38:52.103 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:86) - Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo)
2021-03-09/17:38:52.103 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:81) - /proc/sys/net/core/somaxconn: 4096
2021-03-09/17:38:52.107  INFO: com.alibaba.dubbo.qos.server.Server.start(Server.java:100) -  [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.113 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.120 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.125 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.141 DEBUG: com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:73) -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.157  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:65) -  [DUBBO] Start NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.160 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.166  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:200) -  [DUBBO] Load registry store file /home/yons/.dubbo/dubbo-registry-user-info-server-127.0.0.1:2181.cache, data: {com.ikurento.user.UserProvider=empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.204  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.start(CuratorFrameworkImpl.java:235) - Starting
2021-03-09/17:38:52.205 DEBUG: org.apache.curator.CuratorZookeeperClient.start(CuratorZookeeperClient.java:183) - Starting
2021-03-09/17:38:52.205 DEBUG: org.apache.curator.ConnectionState.start(ConnectionState.java:107) - Starting
2021-03-09/17:38:52.205 DEBUG: org.apache.curator.ConnectionState.reset(ConnectionState.java:255) - reset
2021-03-09/17:38:52.214  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:zookeeper.version=3.4.14-4c25d480e66aadd371de8bd2fd8da255ac140bcf, built on 03/06/2019 16:18 GMT
2021-03-09/17:38:52.214  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:host.name=dml
2021-03-09/17:38:52.214  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.version=1.8.0_282
2021-03-09/17:38:52.214  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.vendor=Private Build
2021-03-09/17:38:52.214  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2021-03-09/17:38:52.214  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar
2021-03-09/17:38:52.214  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2021-03-09/17:38:52.214  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.io.tmpdir=/tmp
2021-03-09/17:38:52.215  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.compiler=<NA>
2021-03-09/17:38:52.215  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.name=Linux
2021-03-09/17:38:52.215  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.arch=amd64
2021-03-09/17:38:52.215  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.version=5.4.0-66-generic
2021-03-09/17:38:52.215  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.name=yons
2021-03-09/17:38:52.215  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.home=/home/yons
2021-03-09/17:38:52.215  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.dir=/home/yons/go/src/java-server
2021-03-09/17:38:52.216  INFO: org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:442) - Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@1e4f4a5c
2021-03-09/17:38:52.217 DEBUG: org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:118) - zookeeper.disableAutoWatchReset is false
2021-03-09/17:38:52.222 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/17:38:52.223  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/17:38:52.224  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:273) -  [DUBBO] Register: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=10716&side=provider&timeout=3000&timestamp=1615282731972, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:38:52.231  INFO: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1162) - Socket error occurred: localhost/127.0.0.1:2181: 拒绝连接
2021-03-09/17:38:52.231 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:203) - Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:779)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:412)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:38:52.232 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:210) - Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:796)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:420)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:38:53.334 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/17:38:53.335  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/17:38:53.336  INFO: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1162) - Socket error occurred: localhost/127.0.0.1:2181: 拒绝连接
2021-03-09/17:38:53.337 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:203) - Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:779)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:412)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:38:53.337 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:210) - Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:796)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:420)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:38:54.439 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/17:38:54.440  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/17:38:54.441  INFO: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1162) - Socket error occurred: localhost/127.0.0.1:2181: 拒绝连接
2021-03-09/17:38:54.441 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:203) - Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:779)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:412)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:38:54.442 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:210) - Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:796)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:420)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:38:55.543 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/17:38:55.544  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/17:38:55.544  INFO: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1162) - Socket error occurred: localhost/127.0.0.1:2181: 拒绝连接
2021-03-09/17:38:55.544 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:203) - Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:779)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:412)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:38:55.544 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:210) - Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:796)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:420)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:38:56.645 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/17:38:56.645  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/17:38:56.646  INFO: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1162) - Socket error occurred: localhost/127.0.0.1:2181: 拒绝连接
2021-03-09/17:38:56.647 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:203) - Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:779)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:412)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:38:56.648 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:210) - Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:796)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:420)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:38:57.239 ERROR: org.apache.curator.ConnectionState.checkTimeouts(ConnectionState.java:228) - Connection timed out for connection string (127.0.0.1:2181) and timeout (5000) / elapsed (5033)
org.apache.curator.CuratorConnectionLossException: KeeperErrorCode = ConnectionLoss
	at org.apache.curator.ConnectionState.checkTimeouts(ConnectionState.java:225)
	at org.apache.curator.ConnectionState.getZooKeeper(ConnectionState.java:94)
	at org.apache.curator.CuratorZookeeperClient.getZooKeeper(CuratorZookeeperClient.java:117)
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.getZooKeeper(CuratorFrameworkImpl.java:489)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:237)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:226)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:109)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:223)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:216)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:175)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:32)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:117)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216)
	at com.alibaba.dubbo.config.spring.ServiceBean.export(ServiceBean.java:291)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:131)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:53)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.ikurento.user.Provider.main(Provider.java:29)
2021-03-09/17:38:57.240 DEBUG: org.apache.curator.RetryLoop.takeException(RetryLoop.java:188) - Retry-able exception received
org.apache.curator.CuratorConnectionLossException: KeeperErrorCode = ConnectionLoss
	at org.apache.curator.ConnectionState.checkTimeouts(ConnectionState.java:225)
	at org.apache.curator.ConnectionState.getZooKeeper(ConnectionState.java:94)
	at org.apache.curator.CuratorZookeeperClient.getZooKeeper(CuratorZookeeperClient.java:117)
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.getZooKeeper(CuratorFrameworkImpl.java:489)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:237)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:226)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:109)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:223)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:216)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:175)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:32)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:117)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216)
	at com.alibaba.dubbo.config.spring.ServiceBean.export(ServiceBean.java:291)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:131)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:53)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.ikurento.user.Provider.main(Provider.java:29)
2021-03-09/17:38:57.749 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/17:38:57.749  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/17:38:57.749  INFO: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1162) - Socket error occurred: localhost/127.0.0.1:2181: 拒绝连接
2021-03-09/17:38:57.749 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:203) - Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:779)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:412)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:38:57.750 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:210) - Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:796)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:420)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:38:58.240 DEBUG: org.apache.curator.RetryLoop.takeException(RetryLoop.java:196) - Retrying operation
2021-03-09/17:38:58.850 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/17:38:58.850  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/17:38:58.851  INFO: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1162) - Socket error occurred: localhost/127.0.0.1:2181: 拒绝连接
2021-03-09/17:38:58.851 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:203) - Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:779)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:412)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:38:58.851 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:210) - Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:796)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:420)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:38:59.952 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/17:38:59.952  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/17:38:59.953  INFO: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1162) - Socket error occurred: localhost/127.0.0.1:2181: 拒绝连接
2021-03-09/17:38:59.954 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:203) - Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:779)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:412)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:38:59.954 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:210) - Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:796)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:420)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:39:01.056 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/17:39:01.056  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/17:39:01.057  INFO: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1162) - Socket error occurred: localhost/127.0.0.1:2181: 拒绝连接
2021-03-09/17:39:01.057 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:203) - Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:779)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:412)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:39:01.058 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:210) - Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:796)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:420)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:39:02.159 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/17:39:02.160  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/17:39:02.161  INFO: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1162) - Socket error occurred: localhost/127.0.0.1:2181: 拒绝连接
2021-03-09/17:39:02.161 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:203) - Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:779)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:412)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:39:02.162 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:210) - Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:796)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:420)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:39:03.040  INFO: com.alibaba.dubbo.config.DubboShutdownHook.run(DubboShutdownHook.java:56) -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:39:03.041  INFO: com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64) -  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=10716&timestamp=1615282731970], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:39:03.041  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:451) -  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=10716&timestamp=1615282731970, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:39:03.041  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(AbstractRegistry.java:284) -  [DUBBO] Unregister: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=10716&side=provider&timeout=3000&timestamp=1615282731972, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:39:03.242 ERROR: org.apache.curator.ConnectionState.checkTimeouts(ConnectionState.java:228) - Connection timed out for connection string (127.0.0.1:2181) and timeout (5000) / elapsed (11036)
org.apache.curator.CuratorConnectionLossException: KeeperErrorCode = ConnectionLoss
	at org.apache.curator.ConnectionState.checkTimeouts(ConnectionState.java:225)
	at org.apache.curator.ConnectionState.getZooKeeper(ConnectionState.java:94)
	at org.apache.curator.CuratorZookeeperClient.getZooKeeper(CuratorZookeeperClient.java:117)
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.getZooKeeper(CuratorFrameworkImpl.java:489)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:237)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:226)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:109)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:223)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:216)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:175)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:32)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:117)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216)
	at com.alibaba.dubbo.config.spring.ServiceBean.export(ServiceBean.java:291)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:131)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:53)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.ikurento.user.Provider.main(Provider.java:29)
2021-03-09/17:39:03.243 DEBUG: org.apache.curator.RetryLoop.takeException(RetryLoop.java:188) - Retry-able exception received
org.apache.curator.CuratorConnectionLossException: KeeperErrorCode = ConnectionLoss
	at org.apache.curator.ConnectionState.checkTimeouts(ConnectionState.java:225)
	at org.apache.curator.ConnectionState.getZooKeeper(ConnectionState.java:94)
	at org.apache.curator.CuratorZookeeperClient.getZooKeeper(CuratorZookeeperClient.java:117)
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.getZooKeeper(CuratorFrameworkImpl.java:489)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:237)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:226)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:109)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:223)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:216)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:175)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:32)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:117)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216)
	at com.alibaba.dubbo.config.spring.ServiceBean.export(ServiceBean.java:291)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:131)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:53)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.ikurento.user.Provider.main(Provider.java:29)
2021-03-09/17:39:03.245 DEBUG: org.apache.curator.RetryLoop.takeException(RetryLoop.java:205) - Retry policy not allowing retry
2021-03-09/17:39:03.263 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/17:39:03.263  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/17:39:03.263  INFO: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1162) - Socket error occurred: localhost/127.0.0.1:2181: 拒绝连接
2021-03-09/17:39:03.263 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:203) - Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:779)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:412)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:39:03.263 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:210) - Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:796)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:420)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:39:04.364 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/17:39:04.365  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/17:39:04.366  INFO: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1162) - Socket error occurred: localhost/127.0.0.1:2181: 拒绝连接
2021-03-09/17:39:04.366 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:203) - Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:779)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:412)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:39:04.367 DEBUG: org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:210) - Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:796)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:420)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1246)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2021-03-09/17:40:15.516 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/17:40:15.518 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/17:40:15.520 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@1782113663 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1433867275 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/17:40:15.523  INFO: org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: startup date [Tue Mar 09 17:40:15 CST 2021]; root of context hierarchy
2021-03-09/17:40:15.543 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/17:40:15.543 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/17:40:15.544 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@245672235 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1012570586 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/17:40:15.549  INFO: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [META-INF/spring/dubbo.provider.xml]
2021-03-09/17:40:15.558 DEBUG: org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2021-03-09/17:40:15.574 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2021-03-09/17:40:15.577 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://dubbo.apache.org/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/compat/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.3.xsd}
2021-03-09/17:40:15.578 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2021-03-09/17:40:15.598 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/compat/dubbo.xsd
2021-03-09/17:40:15.616 DEBUG: org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92) - Loading bean definitions
2021-03-09/17:40:15.621 DEBUG: org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://dubbo.apache.org/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2021-03-09/17:40:15.624  INFO:  - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2021-03-09/17:40:15.640 DEBUG: org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 5 bean definitions from location pattern [META-INF/spring/dubbo.provider.xml]
2021-03-09/17:40:15.640 DEBUG: org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:617) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/17:40:15.653 DEBUG: org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:734) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6adede5]
2021-03-09/17:40:15.654 DEBUG: org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:758) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@10bdf5e5]
2021-03-09/17:40:15.655 DEBUG: org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/17:40:15.655 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'user-info-server'
2021-03-09/17:40:15.655 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'user-info-server'
2021-03-09/17:40:15.662 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'user-info-server' to allow for resolving potential circular references
2021-03-09/17:40:15.681 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'user-info-server'
2021-03-09/17:40:15.681 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'ikurento'
2021-03-09/17:40:15.681 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'ikurento'
2021-03-09/17:40:15.681 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'ikurento' to allow for resolving potential circular references
2021-03-09/17:40:15.684 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'ikurento'
2021-03-09/17:40:15.684 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'dubbo'
2021-03-09/17:40:15.684 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'dubbo'
2021-03-09/17:40:15.684 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2021-03-09/17:40:15.691 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'dubbo'
2021-03-09/17:40:15.692 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'aaa'
2021-03-09/17:40:15.692 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'aaa'
2021-03-09/17:40:15.709 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.712  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:63) -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.712  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:81) -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.778 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.787 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'aaa' to allow for resolving potential circular references
2021-03-09/17:40:15.801 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'demoService'
2021-03-09/17:40:15.801 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'demoService'
2021-03-09/17:40:15.805 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'demoService' to allow for resolving potential circular references
2021-03-09/17:40:15.805 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'demoService'
2021-03-09/17:40:15.805 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'ikurento'
2021-03-09/17:40:15.807 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1671) - Invoking afterPropertiesSet() on bean with name 'aaa'
2021-03-09/17:40:15.807 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'user-info-server'
2021-03-09/17:40:15.808 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'dubbo'
2021-03-09/17:40:15.808 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'aaa'
2021-03-09/17:40:15.808 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'demoService'
2021-03-09/17:40:15.809 DEBUG: org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:785) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@45018215]
2021-03-09/17:40:15.809 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/17:40:15.811 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'aaa'
2021-03-09/17:40:15.811  INFO: com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:129) -  [DUBBO] The service ready on spring started. service: com.ikurento.user.UserProvider, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.852 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.858 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.862 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.867  INFO: com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:539) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to local registry, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.867  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:491) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.867  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:501) -  [DUBBO] Register dubbo service com.ikurento.user.UserProvider url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&owner=AlexStocks&pid=11538&registry=zookeeper&timestamp=1615282815815, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.870 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.875 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.882 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Using SLF4J as the default logging framework
2021-03-09/17:40:15.883 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.eventLoopThreads: 32
2021-03-09/17:40:15.889 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Buffer.address: available
2021-03-09/17:40:15.889 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe.theUnsafe: available
2021-03-09/17:40:15.890 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - sun.misc.Unsafe.copyMemory: available
2021-03-09/17:40:15.890 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Bits.unaligned: true
2021-03-09/17:40:15.891 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - Java version: 8
2021-03-09/17:40:15.891 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noUnsafe: false
2021-03-09/17:40:15.891 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe: available
2021-03-09/17:40:15.891 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noJavassist: false
2021-03-09/17:40:15.893 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Javassist: available
2021-03-09/17:40:15.894 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
2021-03-09/17:40:15.894 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-03-09/17:40:15.894 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noPreferDirect: false
2021-03-09/17:40:15.901 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noKeySetOptimization: false
2021-03-09/17:40:15.901 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-03-09/17:40:15.917 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - -Dio.netty.initialSeedUniquifier: 0xd64c541aeb61a045 (took 4 ms)
2021-03-09/17:40:15.930 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.allocator.type: unpooled
2021-03-09/17:40:15.930 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.threadLocalDirectBufferSize: 65536
2021-03-09/17:40:15.930 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-03-09/17:40:15.932 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:86) - Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo)
2021-03-09/17:40:15.932 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:81) - /proc/sys/net/core/somaxconn: 4096
2021-03-09/17:40:15.935  INFO: com.alibaba.dubbo.qos.server.Server.start(Server.java:100) -  [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.940 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.948 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.953 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.966 DEBUG: com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:73) -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.980  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:65) -  [DUBBO] Start NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.982 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:15.988  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:200) -  [DUBBO] Load registry store file /home/yons/.dubbo/dubbo-registry-user-info-server-127.0.0.1:2181.cache, data: {com.ikurento.user.UserProvider=empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=28103&side=provider&timeout=3000&timestamp=1615279128918}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:16.022  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.start(CuratorFrameworkImpl.java:235) - Starting
2021-03-09/17:40:16.023 DEBUG: org.apache.curator.CuratorZookeeperClient.start(CuratorZookeeperClient.java:183) - Starting
2021-03-09/17:40:16.023 DEBUG: org.apache.curator.ConnectionState.start(ConnectionState.java:107) - Starting
2021-03-09/17:40:16.023 DEBUG: org.apache.curator.ConnectionState.reset(ConnectionState.java:255) - reset
2021-03-09/17:40:16.033  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:zookeeper.version=3.4.14-4c25d480e66aadd371de8bd2fd8da255ac140bcf, built on 03/06/2019 16:18 GMT
2021-03-09/17:40:16.033  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:host.name=dml
2021-03-09/17:40:16.034  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.version=1.8.0_282
2021-03-09/17:40:16.034  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.vendor=Private Build
2021-03-09/17:40:16.034  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2021-03-09/17:40:16.034  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar
2021-03-09/17:40:16.034  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2021-03-09/17:40:16.034  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.io.tmpdir=/tmp
2021-03-09/17:40:16.034  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.compiler=<NA>
2021-03-09/17:40:16.034  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.name=Linux
2021-03-09/17:40:16.034  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.arch=amd64
2021-03-09/17:40:16.035  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.version=5.4.0-66-generic
2021-03-09/17:40:16.035  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.name=yons
2021-03-09/17:40:16.035  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.home=/home/yons
2021-03-09/17:40:16.035  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.dir=/home/yons/go/src/java-server
2021-03-09/17:40:16.035  INFO: org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:442) - Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@7dc19a70
2021-03-09/17:40:16.037 DEBUG: org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:118) - zookeeper.disableAutoWatchReset is false
2021-03-09/17:40:16.042 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/17:40:16.043  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/17:40:16.045  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:273) -  [DUBBO] Register: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:16.051  INFO: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:879) - Socket connection established to localhost/127.0.0.1:2181, initiating session
2021-03-09/17:40:16.052 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:952) - Session establishment request sent on localhost/127.0.0.1:2181
2021-03-09/17:40:16.065  INFO: org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1299) - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1000a4d6de00000, negotiated timeout = 40000
2021-03-09/17:40:16.067  INFO: org.apache.curator.framework.state.ConnectionStateManager.postState(ConnectionStateManager.java:228) - State change: CONNECTED
2021-03-09/17:40:16.075 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00000, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,1,-101  request:: '/dubbo/com.ikurento.user.UserProvider/providers,F  response::  
2021-03-09/17:40:16.076 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00000, packet:: clientPath:null serverPath:null finished:false header:: 2,3  replyHeader:: 2,1,-101  request:: '/dubbo/com.ikurento.user.UserProvider,F  response::  
2021-03-09/17:40:16.077 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00000, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,1,-101  request:: '/dubbo,F  response::  
2021-03-09/17:40:16.089 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,2,0  request:: '/dubbo,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo 
2021-03-09/17:40:16.091 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00000, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,3,0  request:: '/dubbo/com.ikurento.user.UserProvider,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.ikurento.user.UserProvider 
2021-03-09/17:40:16.094 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00000, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,4,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.ikurento.user.UserProvider/providers 
2021-03-09/17:40:16.096 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00000, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,5,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D11538%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615282815818,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D11538%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615282815818 
2021-03-09/17:40:16.097  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:298) -  [DUBBO] Subscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:16.099 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00000, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,5,-101  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,F  response::  
2021-03-09/17:40:16.101 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00000, packet:: clientPath:null serverPath:null finished:false header:: 9,3  replyHeader:: 9,5,0  request:: '/dubbo/com.ikurento.user.UserProvider,F  response:: s{3,3,1615282816090,1615282816090,0,1,0,0,10,1,4} 
2021-03-09/17:40:16.102 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00000, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,6,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.ikurento.user.UserProvider/configurators 
2021-03-09/17:40:16.106 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00000, packet:: clientPath:null serverPath:null finished:false header:: 11,12  replyHeader:: 11,6,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,T  response:: v{},s{6,6,1615282816101,1615282816101,0,0,0,0,10,0,6} 
2021-03-09/17:40:16.107  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:387) -  [DUBBO] Notify urls for subscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818, urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:16.107 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:367) -  [DUBBO] original override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:16.107 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:369) -  [DUBBO] subscribe url: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818, override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:16.110 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:16.113 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:16.116 DEBUG: org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:92) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2021-03-09/17:40:16.117 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/17:40:21.664 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:21.683 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:21.699  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:21.700  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:41034,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:29.444 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a4d6de00000 after 2ms
2021-03-09/17:40:42.792 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a4d6de00000 after 3ms
2021-03-09/17:40:50.638  INFO: com.alibaba.dubbo.config.DubboShutdownHook.run(DubboShutdownHook.java:56) -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:50.639  INFO: com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64) -  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=11538&timestamp=1615282815815], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:50.639  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:451) -  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=11538&timestamp=1615282815815, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:50.639  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(AbstractRegistry.java:284) -  [DUBBO] Unregister: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:50.642 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00000, packet:: clientPath:null serverPath:null finished:false header:: 12,2  replyHeader:: 12,13,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D11538%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615282815818,-1  response:: null
2021-03-09/17:40:50.643  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:460) -  [DUBBO] Destroy unregister url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:50.643  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(AbstractRegistry.java:317) -  [DUBBO] Unsubscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:50.643  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:476) -  [DUBBO] Destroy unsubscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:50.643 DEBUG: org.apache.curator.framework.imps.CuratorFrameworkImpl.close(CuratorFrameworkImpl.java:282) - Closing
2021-03-09/17:40:50.643  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop(CuratorFrameworkImpl.java:821) - backgroundOperationsLoop exiting
2021-03-09/17:40:50.644 DEBUG: org.apache.curator.CuratorZookeeperClient.close(CuratorZookeeperClient.java:199) - Closing
2021-03-09/17:40:50.644 DEBUG: org.apache.curator.ConnectionState.close(ConnectionState.java:115) - Closing
2021-03-09/17:40:50.645 DEBUG: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:682) - Closing session: 0x1000a4d6de00000
2021-03-09/17:40:50.645 DEBUG: org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370) - Closing client for session: 0x1000a4d6de00000
2021-03-09/17:40:50.646 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00000, packet:: clientPath:null serverPath:null finished:false header:: 13,-11  replyHeader:: 13,14,0  request:: null response:: null
2021-03-09/17:40:50.646 DEBUG: org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354) - Disconnecting client for session: 0x1000a4d6de00000
2021-03-09/17:40:50.646  INFO: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:693) - Session: 0x1000a4d6de00000 closed
2021-03-09/17:40:50.646  INFO: org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:522) - EventThread shut down for session: 0x1000a4d6de00000
2021-03-09/17:40:50.646 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1146) - An exception was thrown while closing send thread for session 0x1000a4d6de00000 : Unable to read additional data from server sessionid 0x1000a4d6de00000, likely server has closed socket
2021-03-09/17:40:50.647  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:432) -  [DUBBO] Close dubbo server: /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:50.648  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.close(AbstractServer.java:145) -  [DUBBO] Close NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:50.648  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:50.648  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: injvm://127.0.0.1/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.007 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/17:40:52.010 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/17:40:52.011 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@1782113663 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1433867275 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/17:40:52.014  INFO: org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: startup date [Tue Mar 09 17:40:52 CST 2021]; root of context hierarchy
2021-03-09/17:40:52.035 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemProperties' with lowest search precedence
2021-03-09/17:40:52.035 DEBUG: org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:106) - Adding PropertySource 'systemEnvironment' with lowest search precedence
2021-03-09/17:40:52.035 DEBUG: org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:124) - Initialized StandardEnvironment with PropertySources [MapPropertySource@245672235 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.282-b08, java.vm.vendor=Private Build, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/yons/go/src/java-server, java.runtime.version=1.8.0_282-8u282-b08-0ubuntu1~18.04-b08, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=5.4.0-66-generic, user.home=/home/yons, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar, user.name=yons, java.vm.specification.version=1.8, sun.java.command=com.ikurento.user.Provider, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=zh, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_282, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, java.vendor=Private Build, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@1012570586 {name='systemEnvironment', properties={PATH=/home/yons/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin, XAUTHORITY=/run/user/1000/gdm/Xauthority, XMODIFIERS=@im=fcitx, GDMSESSION=ubuntu, XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop, QT_IM_MODULE=fcitx, TEXTDOMAINDIR=/usr/share/locale/, GTK_IM_MODULE=fcitx, XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg, DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus, LANG=zh_CN.UTF-8, XDG_SESSION_TYPE=x11, XDG_SESSION_ID=5, XDG_CURRENT_DESKTOP=ubuntu:GNOME, DISPLAY=:2, SSH_AGENT_PID=3194, QT4_IM_MODULE=fcitx, USERNAME=yons, SESSION_MANAGER=local/dml:@/tmp/.ICE-unix/3104,unix/dml:/tmp/.ICE-unix/3104, LOGNAME=yons, PWD=/home/yons/go/src/java-server, IM_CONFIG_PHASE=2, LANGUAGE=zh_CN:zh, GJS_DEBUG_TOPICS=JS ERROR;JS LOG, SHELL=/bin/zsh, GIO_LAUNCHED_DESKTOP_FILE=/home/yons/.local/share/applications/jetbrains-idea.desktop, DESKTOP_SESSION=ubuntu, GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1, OLDPWD=/home/yons/software/idea-IU-202.7660.26/bin, USER=yons, XDG_MENU_PREFIX=gnome-, GIO_LAUNCHED_DESKTOP_FILE_PID=29117, WINDOWPATH=3, QT_ACCESSIBILITY=1, GNOME_DESKTOP_SESSION_ID=this-is-deprecated, GJS_DEBUG_OUTPUT=stderr, XDG_SEAT=seat0, GTK_MODULES=gail:atk-bridge, SSH_AUTH_SOCK=/run/user/1000/keyring/ssh, CLUTTER_IM_MODULE=xim, TEXTDOMAIN=im-config, GNOME_SHELL_SESSION_MODE=ubuntu, XDG_RUNTIME_DIR=/run/user/1000, XDG_SESSION_DESKTOP=ubuntu, XDG_VTNR=3, SHLVL=0, HOME=/home/yons}}]
2021-03-09/17:40:52.041  INFO: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [META-INF/spring/dubbo.provider.xml]
2021-03-09/17:40:52.050 DEBUG: org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2021-03-09/17:40:52.066 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2021-03-09/17:40:52.069 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://dubbo.apache.org/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.3.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/compat/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.3.xsd=org/springframework/context/config/spring-context-4.3.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.3.xsd=org/springframework/aop/config/spring-aop-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.3.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.3.xsd=org/springframework/beans/factory/xml/spring-tool-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-4.3.xsd=org/springframework/ejb/config/spring-jee-4.3.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.3.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.3.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.3.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-4.3.xsd=org/springframework/beans/factory/xml/spring-beans-4.3.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/task/spring-task-4.3.xsd=org/springframework/scheduling/config/spring-task-4.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.3.xsd}
2021-03-09/17:40:52.070 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2021-03-09/17:40:52.091 DEBUG: org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/compat/dubbo.xsd
2021-03-09/17:40:52.108 DEBUG: org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92) - Loading bean definitions
2021-03-09/17:40:52.115 DEBUG: org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://dubbo.apache.org/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2021-03-09/17:40:52.119  INFO:  - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2021-03-09/17:40:52.141 DEBUG: org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 5 bean definitions from location pattern [META-INF/spring/dubbo.provider.xml]
2021-03-09/17:40:52.142 DEBUG: org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:617) - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6f75e721: org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/17:40:52.157 DEBUG: org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:734) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6adede5]
2021-03-09/17:40:52.158 DEBUG: org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:758) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@10bdf5e5]
2021-03-09/17:40:52.158 DEBUG: org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:730) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a2d45ba: defining beans [user-info-server,ikurento,dubbo,aaa,demoService]; root of factory hierarchy
2021-03-09/17:40:52.159 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'user-info-server'
2021-03-09/17:40:52.159 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'user-info-server'
2021-03-09/17:40:52.165 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'user-info-server' to allow for resolving potential circular references
2021-03-09/17:40:52.185 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'user-info-server'
2021-03-09/17:40:52.185 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'ikurento'
2021-03-09/17:40:52.185 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'ikurento'
2021-03-09/17:40:52.185 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'ikurento' to allow for resolving potential circular references
2021-03-09/17:40:52.189 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'ikurento'
2021-03-09/17:40:52.189 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'dubbo'
2021-03-09/17:40:52.189 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'dubbo'
2021-03-09/17:40:52.189 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2021-03-09/17:40:52.197 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'dubbo'
2021-03-09/17:40:52.197 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'aaa'
2021-03-09/17:40:52.198 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'aaa'
2021-03-09/17:40:52.216 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.219  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:63) -  [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.219  WARN: com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:81) -  [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.288 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.299 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'aaa' to allow for resolving potential circular references
2021-03-09/17:40:52.313 DEBUG: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'demoService'
2021-03-09/17:40:52.313 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:449) - Creating instance of bean 'demoService'
2021-03-09/17:40:52.317 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) - Eagerly caching bean 'demoService' to allow for resolving potential circular references
2021-03-09/17:40:52.317 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'demoService'
2021-03-09/17:40:52.318 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'ikurento'
2021-03-09/17:40:52.319 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1671) - Invoking afterPropertiesSet() on bean with name 'aaa'
2021-03-09/17:40:52.319 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'user-info-server'
2021-03-09/17:40:52.319 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'dubbo'
2021-03-09/17:40:52.320 DEBUG: org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:485) - Finished creating instance of bean 'aaa'
2021-03-09/17:40:52.320 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'demoService'
2021-03-09/17:40:52.320 DEBUG: org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:785) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@45018215]
2021-03-09/17:40:52.320 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/17:40:52.321 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'aaa'
2021-03-09/17:40:52.322  INFO: com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:129) -  [DUBBO] The service ready on spring started. service: com.ikurento.user.UserProvider, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.359 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.364 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.369 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.373  INFO: com.alibaba.dubbo.config.ServiceConfig.exportLocal(ServiceConfig.java:539) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to local registry, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.373  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:491) -  [DUBBO] Export dubbo service com.ikurento.user.UserProvider to url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.373  INFO: com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:501) -  [DUBBO] Register dubbo service com.ikurento.user.UserProvider url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&owner=AlexStocks&pid=11794&registry=zookeeper&timestamp=1615282852325, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.376 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.382 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.390 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Using SLF4J as the default logging framework
2021-03-09/17:40:52.391 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.eventLoopThreads: 32
2021-03-09/17:40:52.396 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Buffer.address: available
2021-03-09/17:40:52.396 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe.theUnsafe: available
2021-03-09/17:40:52.396 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - sun.misc.Unsafe.copyMemory: available
2021-03-09/17:40:52.396 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - java.nio.Bits.unaligned: true
2021-03-09/17:40:52.397 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - Java version: 8
2021-03-09/17:40:52.397 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noUnsafe: false
2021-03-09/17:40:52.397 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - sun.misc.Unsafe: available
2021-03-09/17:40:52.397 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noJavassist: false
2021-03-09/17:40:52.399 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - Javassist: available
2021-03-09/17:40:52.399 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
2021-03-09/17:40:52.399 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2021-03-09/17:40:52.399 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noPreferDirect: false
2021-03-09/17:40:52.406 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.noKeySetOptimization: false
2021-03-09/17:40:52.406 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.selectorAutoRebuildThreshold: 512
2021-03-09/17:40:52.425 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:71) - -Dio.netty.initialSeedUniquifier: 0x76cdef8c873474cc (took 6 ms)
2021-03-09/17:40:52.442 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.allocator.type: unpooled
2021-03-09/17:40:52.442 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.threadLocalDirectBufferSize: 65536
2021-03-09/17:40:52.442 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:76) - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2021-03-09/17:40:52.444 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:86) - Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo)
2021-03-09/17:40:52.444 DEBUG: io.netty.util.internal.logging.Slf4JLogger.debug(Slf4JLogger.java:81) - /proc/sys/net/core/somaxconn: 4096
2021-03-09/17:40:52.447  INFO: com.alibaba.dubbo.qos.server.Server.start(Server.java:100) -  [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.454 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.462 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.467 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.481 DEBUG: com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(NettyHelper.java:73) -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.498  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:65) -  [DUBBO] Start NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.500 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.506  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.loadProperties(AbstractRegistry.java:200) -  [DUBBO] Load registry store file /home/yons/.dubbo/dubbo-registry-user-info-server-127.0.0.1:2181.cache, data: {com.ikurento.user.UserProvider=empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11538&side=provider&timeout=3000&timestamp=1615282815818}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.545  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.start(CuratorFrameworkImpl.java:235) - Starting
2021-03-09/17:40:52.546 DEBUG: org.apache.curator.CuratorZookeeperClient.start(CuratorZookeeperClient.java:183) - Starting
2021-03-09/17:40:52.546 DEBUG: org.apache.curator.ConnectionState.start(ConnectionState.java:107) - Starting
2021-03-09/17:40:52.546 DEBUG: org.apache.curator.ConnectionState.reset(ConnectionState.java:255) - reset
2021-03-09/17:40:52.555  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:zookeeper.version=3.4.14-4c25d480e66aadd371de8bd2fd8da255ac140bcf, built on 03/06/2019 16:18 GMT
2021-03-09/17:40:52.555  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:host.name=dml
2021-03-09/17:40:52.555  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.version=1.8.0_282
2021-03-09/17:40:52.555  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.vendor=Private Build
2021-03-09/17:40:52.555  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2021-03-09/17:40:52.555  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.class.path=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/lib/rt.jar:/home/yons/go/src/java-server/target/classes:/home/yons/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/yons/.m2/repository/com/alibaba/dubbo/2.6.5/dubbo-2.6.5.jar:/home/yons/.m2/repository/org/springframework/spring-context/4.3.16.RELEASE/spring-context-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-aop/4.3.16.RELEASE/spring-aop-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-beans/4.3.16.RELEASE/spring-beans-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/springframework/spring-core/4.3.16.RELEASE/spring-core-4.3.16.RELEASE.jar:/home/yons/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/yons/.m2/repository/org/springframework/spring-expression/4.3.16.RELEASE/spring-expression-4.3.16.RELEASE.jar:/home/yons/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yons/.m2/repository/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/home/yons/.m2/repository/io/netty/netty-all/4.0.35.Final/netty-all-4.0.35.Final.jar:/home/yons/.m2/repository/org/apache/curator/curator-framework/2.12.0/curator-framework-2.12.0.jar:/home/yons/.m2/repository/org/apache/curator/curator-client/2.12.0/curator-client-2.12.0.jar:/home/yons/.m2/repository/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/yons/.m2/repository/com/qianmi/dubbo-rpc-jsonrpc/1.0.1/dubbo-rpc-jsonrpc-1.0.1.jar:/home/yons/.m2/repository/com/github/briandilley/jsonrpc4j/jsonrpc4j/1.2.0/jsonrpc4j-1.2.0.jar:/home/yons/.m2/repository/net/iharder/base64/2.3.8/base64-2.3.8.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/yons/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/yons/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/yons/.m2/repository/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/home/yons/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/yons/.m2/repository/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/yons/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/yons/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/yons/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/yons/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/yons/.m2/repository/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/yons/.m2/repository/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/yons/software/idea-IU-202.7660.26/lib/idea_rt.jar
2021-03-09/17:40:52.555  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2021-03-09/17:40:52.556  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.io.tmpdir=/tmp
2021-03-09/17:40:52.556  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:java.compiler=<NA>
2021-03-09/17:40:52.556  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.name=Linux
2021-03-09/17:40:52.556  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.arch=amd64
2021-03-09/17:40:52.556  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:os.version=5.4.0-66-generic
2021-03-09/17:40:52.556  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.name=yons
2021-03-09/17:40:52.556  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.home=/home/yons
2021-03-09/17:40:52.556  INFO: org.apache.zookeeper.Environment.logEnv(Environment.java:100) - Client environment:user.dir=/home/yons/go/src/java-server
2021-03-09/17:40:52.557  INFO: org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:442) - Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@1e4f4a5c
2021-03-09/17:40:52.558 DEBUG: org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:118) - zookeeper.disableAutoWatchReset is false
2021-03-09/17:40:52.563 DEBUG: org.apache.zookeeper.SaslServerPrincipal.getServerPrincipal(SaslServerPrincipal.java:74) - Canonicalized address to localhost
2021-03-09/17:40:52.564  INFO: org.apache.zookeeper.ClientCnxn$SendThread.logStartConnect(ClientCnxn.java:1025) - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2021-03-09/17:40:52.565  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.register(AbstractRegistry.java:273) -  [DUBBO] Register: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.571  INFO: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:879) - Socket connection established to localhost/127.0.0.1:2181, initiating session
2021-03-09/17:40:52.572 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:952) - Session establishment request sent on localhost/127.0.0.1:2181
2021-03-09/17:40:52.575  INFO: org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1299) - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1000a4d6de00002, negotiated timeout = 40000
2021-03-09/17:40:52.577  INFO: org.apache.curator.framework.state.ConnectionStateManager.postState(ConnectionStateManager.java:228) - State change: CONNECTED
2021-03-09/17:40:52.583 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00002, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,15,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers,F  response:: s{4,4,1615282816092,1615282816092,0,2,0,0,10,0,13} 
2021-03-09/17:40:52.589 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00002, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,16,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D11794%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615282852328,#3137322e31382e302e31,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D11794%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615282852328 
2021-03-09/17:40:52.589  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.subscribe(AbstractRegistry.java:298) -  [DUBBO] Subscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.591 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00002, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,16,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,F  response:: s{6,6,1615282816101,1615282816101,0,0,0,0,10,0,6} 
2021-03-09/17:40:52.594 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00002, packet:: clientPath:null serverPath:null finished:false header:: 4,12  replyHeader:: 4,16,0  request:: '/dubbo/com.ikurento.user.UserProvider/configurators,T  response:: v{},s{6,6,1615282816101,1615282816101,0,0,0,0,10,0,6} 
2021-03-09/17:40:52.594  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.notify(AbstractRegistry.java:387) -  [DUBBO] Notify urls for subscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328, urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.595 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:367) -  [DUBBO] original override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.595 DEBUG: com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener.notify(RegistryProtocol.java:369) -  [DUBBO] subscribe url: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328, override urls: [empty://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.598 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.602 DEBUG: com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:942) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:52.606 DEBUG: org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:92) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2021-03-09/17:40:52.607 DEBUG: org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251) - Returning cached instance of singleton bean 'lifecycleProcessor'
2021-03-09/17:40:56.909 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:56.924 DEBUG: com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:59) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:56.936  WARN: com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:205) -  [DUBBO] All clients has discontected from /172.18.0.1:20010. You can graceful shutdown now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:40:56.937  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.disconnected(DubboProtocol.java:128) -  [DUBBO] disconnected from /172.18.0.1:41110,url:dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&channel.readonly.sent=true&codec=dubbo&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&heartbeat=60000&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:41:05.943 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a4d6de00002 after 3ms
2021-03-09/17:41:19.290 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:745) - Got ping response for sessionid: 0x1000a4d6de00002 after 2ms
2021-03-09/17:41:26.572  INFO: com.alibaba.dubbo.config.DubboShutdownHook.run(DubboShutdownHook.java:56) -  [DUBBO] Run shutdown hook now., dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:41:26.573  INFO: com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64) -  [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=11794&timestamp=1615282852325], dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:41:26.573  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:451) -  [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=user-info-server&dubbo=2.0.2&environment=product&interface=com.alibaba.dubbo.registry.RegistryService&owner=AlexStocks&pid=11794&timestamp=1615282852325, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:41:26.573  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unregister(AbstractRegistry.java:284) -  [DUBBO] Unregister: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:41:26.577 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00002, packet:: clientPath:null serverPath:null finished:false header:: 5,2  replyHeader:: 5,33,0  request:: '/dubbo/com.ikurento.user.UserProvider/providers/dubbo%253A%252F%252F172.18.0.1%253A20010%252Fcom.ikurento.user.UserProvider%253Fanyhost%253Dtrue%2526application%253Duser-info-server%2526bean.name%253Daaa%2526default.timeout%253D10000%2526dubbo%253D2.0.2%2526environment%253Dproduct%2526generic%253Dfalse%2526interface%253Dcom.ikurento.user.UserProvider%2526methods%253DGetUser%2526owner%253DAlexStocks%2526pid%253D11794%2526side%253Dprovider%2526timeout%253D3000%2526timestamp%253D1615282852328,-1  response:: null
2021-03-09/17:41:26.577  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:460) -  [DUBBO] Destroy unregister url dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:41:26.577  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.unsubscribe(AbstractRegistry.java:317) -  [DUBBO] Unsubscribe: provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:41:26.577  INFO: com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:476) -  [DUBBO] Destroy unsubscribe url provider://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&category=configurators&check=false&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:41:26.578 DEBUG: org.apache.curator.framework.imps.CuratorFrameworkImpl.close(CuratorFrameworkImpl.java:282) - Closing
2021-03-09/17:41:26.578  INFO: org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop(CuratorFrameworkImpl.java:821) - backgroundOperationsLoop exiting
2021-03-09/17:41:26.578 DEBUG: org.apache.curator.CuratorZookeeperClient.close(CuratorZookeeperClient.java:199) - Closing
2021-03-09/17:41:26.579 DEBUG: org.apache.curator.ConnectionState.close(ConnectionState.java:115) - Closing
2021-03-09/17:41:26.579 DEBUG: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:682) - Closing session: 0x1000a4d6de00002
2021-03-09/17:41:26.579 DEBUG: org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370) - Closing client for session: 0x1000a4d6de00002
2021-03-09/17:41:26.581 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:846) - Reading reply sessionid:0x1000a4d6de00002, packet:: clientPath:null serverPath:null finished:false header:: 6,-11  replyHeader:: 6,34,0  request:: null response:: null
2021-03-09/17:41:26.581 DEBUG: org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354) - Disconnecting client for session: 0x1000a4d6de00002
2021-03-09/17:41:26.581 DEBUG: org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1146) - An exception was thrown while closing send thread for session 0x1000a4d6de00002 : Unable to read additional data from server sessionid 0x1000a4d6de00002, likely server has closed socket
2021-03-09/17:41:26.581  INFO: org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:693) - Session: 0x1000a4d6de00002 closed
2021-03-09/17:41:26.581  INFO: org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:522) - EventThread shut down for session: 0x1000a4d6de00002
2021-03-09/17:41:26.582  INFO: com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:432) -  [DUBBO] Close dubbo server: /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:41:26.583  INFO: com.alibaba.dubbo.remoting.transport.AbstractServer.close(AbstractServer.java:145) -  [DUBBO] Close NettyServer bind /0.0.0.0:20010, export /172.18.0.1:20010, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:41:26.583  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: dubbo://172.18.0.1:20010/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328, dubbo version: 2.6.5, current host: 172.18.0.1
2021-03-09/17:41:26.583  INFO: com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:76) -  [DUBBO] Unexport service: injvm://127.0.0.1/com.ikurento.user.UserProvider?anyhost=true&application=user-info-server&bean.name=aaa&bind.ip=172.18.0.1&bind.port=20010&default.timeout=10000&dubbo=2.0.2&environment=product&generic=false&interface=com.ikurento.user.UserProvider&methods=GetUser&owner=AlexStocks&pid=11794&side=provider&timeout=3000&timestamp=1615282852328, dubbo version: 2.6.5, current host: 172.18.0.1
